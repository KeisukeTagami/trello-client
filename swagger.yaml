---
swagger: "2.0"
info:
  description: "This document describes the REST API of Trello as published by Trello.com.\n\
    \ - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>\n\
    \ - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that\
    \ were scraped in order to generate this specification.</a>"
  version: "1.0"
  title: "Trello"
  termsOfService: "https://trello.com/legal"
  contact:
    name: "Trello"
    url: "https://trello.com/home"
  license:
    name: "Trello : Terms of Service"
    url: "https://trello.com/legal"
host: "trello.com"
basePath: "/1"
tags:
- name: "action"
  description: "https://trello.com/docs/api/action/index.html"
- name: "batch"
  description: "https://trello.com/docs/api/batch/index.html"
- name: "board"
  description: "https://trello.com/docs/api/board/index.html"
- name: "card"
  description: "https://trello.com/docs/api/card/index.html"
- name: "checklist"
  description: "https://trello.com/docs/api/checklist/index.html"
- name: "label"
  description: "https://trello.com/docs/api/label/index.html"
- name: "list"
  description: "https://trello.com/docs/api/list/index.html"
- name: "member"
  description: "https://trello.com/docs/api/member/index.html"
- name: "notification"
  description: "https://trello.com/docs/api/notification/index.html"
- name: "organization"
  description: "https://trello.com/docs/api/organization/index.html"
- name: "search"
  description: "https://trello.com/docs/api/search/index.html"
- name: "session"
  description: "https://trello.com/docs/api/session/index.html"
- name: "token"
  description: "https://trello.com/docs/api/token/index.html"
- name: "type"
  description: "https://trello.com/docs/api/type/index.html"
- name: "webhook"
  description: "https://trello.com/docs/api/webhook/index.html"
schemes:
- "https"
paths:
  /actions/{idAction}:
    get:
      tags:
      - "action"
      summary: "getActionsByIdAction()"
      operationId: "getActionsByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "action"
      summary: "updateActionsByIdAction()"
      operationId: "updateActionsByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Actions\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/actions"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "action"
      summary: "deleteActionsByIdAction()"
      operationId: "deleteActionsByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/board:
    get:
      tags:
      - "action"
      summary: "getActionsBoardByIdAction()"
      operationId: "getActionsBoardByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/board/{field}:
    get:
      tags:
      - "action"
      summary: "getActionsBoardByIdActionByField()"
      operationId: "getActionsBoardByIdActionByField"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/card:
    get:
      tags:
      - "action"
      summary: "getActionsCardByIdAction()"
      operationId: "getActionsCardByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/card/{field}:
    get:
      tags:
      - "action"
      summary: "getActionsCardByIdActionByField()"
      operationId: "getActionsCardByIdActionByField"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/display:
    get:
      tags:
      - "action"
      summary: "getActionsDisplayByIdAction()"
      operationId: "getActionsDisplayByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/entities:
    get:
      tags:
      - "action"
      summary: "getActionsEntitiesByIdAction()"
      operationId: "getActionsEntitiesByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/list:
    get:
      tags:
      - "action"
      summary: "getActionsListByIdAction()"
      operationId: "getActionsListByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/list/{field}:
    get:
      tags:
      - "action"
      summary: "getActionsListByIdActionByField()"
      operationId: "getActionsListByIdActionByField"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/member:
    get:
      tags:
      - "action"
      summary: "getActionsMemberByIdAction()"
      operationId: "getActionsMemberByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/member/{field}:
    get:
      tags:
      - "action"
      summary: "getActionsMemberByIdActionByField()"
      operationId: "getActionsMemberByIdActionByField"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/memberCreator:
    get:
      tags:
      - "action"
      summary: "getActionsMemberCreatorByIdAction()"
      operationId: "getActionsMemberCreatorByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/memberCreator/{field}:
    get:
      tags:
      - "action"
      summary: "getActionsMemberCreatorByIdActionByField()"
      operationId: "getActionsMemberCreatorByIdActionByField"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/organization:
    get:
      tags:
      - "action"
      summary: "getActionsOrganizationByIdAction()"
      operationId: "getActionsOrganizationByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/organization/{field}:
    get:
      tags:
      - "action"
      summary: "getActionsOrganizationByIdActionByField()"
      operationId: "getActionsOrganizationByIdActionByField"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/text:
    put:
      tags:
      - "action"
      summary: "updateActionsTextByIdAction()"
      operationId: "updateActionsTextByIdAction"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Actions Text\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/actions_text"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /actions/{idAction}/{field}:
    get:
      tags:
      - "action"
      summary: "getActionsByIdActionByField()"
      operationId: "getActionsByIdActionByField"
      parameters:
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /batch:
    get:
      tags:
      - "batch"
      summary: "getBatch()"
      operationId: "getBatch"
      parameters:
      - name: "urls"
        in: "query"
        description: "list of API v1 GET routes, not including the version prefix"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /boards:
    post:
      tags:
      - "board"
      summary: "addBoards()"
      operationId: "addBoards"
      parameters:
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards\" to be added."
        required: true
        schema:
          $ref: "#/definitions/boards"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}:
    get:
      tags:
      - "board"
      summary: "getBoardsByIdBoard()"
      operationId: "getBoardsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "actions_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "actions_since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "actions_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "action_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "action_member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "action_member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "action_memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "action_memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "cards"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "none"
      - name: "card_fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "card_attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "card_attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "card_checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "card_stickers"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "boardStars"
        in: "query"
        description: "One of: mine or none"
        required: false
        type: "string"
        default: "none"
      - name: "labels"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "label_fields"
        in: "query"
        description: "all or a comma-separated list of: color, idBoard, name or uses"
        required: false
        type: "string"
        default: "all"
      - name: "labels_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "lists"
        in: "query"
        description: "One of: all, closed, none or open"
        required: false
        type: "string"
        default: "none"
      - name: "list_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        required: false
        type: "string"
        default: "all"
      - name: "memberships"
        in: "query"
        description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        required: false
        type: "string"
        default: "none"
      - name: "memberships_member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberships_member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "fullName and username"
      - name: "members"
        in: "query"
        description: "One of: admins, all, none, normal or owners"
        required: false
        type: "string"
        default: "none"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, initials, fullName, username and confirmed"
      - name: "membersInvited"
        in: "query"
        description: "One of: admins, all, none, normal or owners"
        required: false
        type: "string"
        default: "none"
      - name: "membersInvited_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, initials, fullName and username"
      - name: "checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "checklist_fields"
        in: "query"
        description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        required: false
        type: "string"
        default: "all"
      - name: "organization"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "organization_fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "name and displayName"
      - name: "organization_memberships"
        in: "query"
        description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        required: false
        type: "string"
        default: "none"
      - name: "myPrefs"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "name, desc, descData, closed, idOrganization, pinned, url, shortUrl,\
          \ prefs and labelNames"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "board"
      summary: "updateBoardsByIdBoard()"
      operationId: "updateBoardsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/boards"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/actions:
    get:
      tags:
      - "board"
      summary: "getBoardsActionsByIdBoard()"
      operationId: "getBoardsActionsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page * limit must be less than 1000"
        required: false
        type: "string"
        default: "0"
      - name: "idModels"
        in: "query"
        description: "Only return actions related to these model ids"
        required: false
        type: "string"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/boardStars:
    get:
      tags:
      - "board"
      summary: "getBoardsBoardStarsByIdBoard()"
      operationId: "getBoardsBoardStarsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: mine or none"
        required: false
        type: "string"
        default: "mine"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/calendarKey/generate:
    post:
      tags:
      - "board"
      summary: "addBoardsCalendarKeyGenerateByIdBoard()"
      operationId: "addBoardsCalendarKeyGenerateByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/cards:
    get:
      tags:
      - "board"
      summary: "getBoardsCardsByIdBoard()"
      operationId: "getBoardsCardsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "stickers"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "checkItemStates"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
      - name: "since"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "visible"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/cards/{filter}:
    get:
      tags:
      - "board"
      summary: "getBoardsCardsByIdBoardByFilter()"
      operationId: "getBoardsCardsByIdBoardByFilter"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /boards/{idBoard}/cards/{idCard}:
    get:
      tags:
      - "board"
      summary: "getBoardsCardsByIdBoardByIdCard()"
      operationId: "getBoardsCardsByIdBoardByIdCard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "idCard"
        in: "path"
        description: "idCard"
        required: true
        type: "string"
      - name: "attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "actions_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "action_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "action_memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, initials, fullName and username"
      - name: "checkItemStates"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "checkItemState_fields"
        in: "query"
        description: "all or a comma-separated list of: idCheckItem or state"
        required: false
        type: "string"
        default: "all"
      - name: "labels"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "checklist_fields"
        in: "query"
        description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/checklists:
    get:
      tags:
      - "board"
      summary: "getBoardsChecklistsByIdBoard()"
      operationId: "getBoardsChecklistsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "cards"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "none"
      - name: "card_fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "checkItems"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "checkItem_fields"
        in: "query"
        description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        required: false
        type: "string"
        default: "name, nameData, pos and state"
      - name: "filter"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "board"
      summary: "addBoardsChecklistsByIdBoard()"
      operationId: "addBoardsChecklistsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Checklists\" to be added."
        required: true
        schema:
          $ref: "#/definitions/boards_checklists"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/closed:
    put:
      tags:
      - "board"
      summary: "updateBoardsClosedByIdBoard()"
      operationId: "updateBoardsClosedByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Closed\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/boards_closed"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/deltas:
    get:
      tags:
      - "board"
      summary: "getBoardsDeltasByIdBoard()"
      operationId: "getBoardsDeltasByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "tags"
        in: "query"
        description: "A valid tag for subscribing"
        required: true
        type: "string"
      - name: "ixLastUpdate"
        in: "query"
        description: "a number from -1 to Infinity"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/desc:
    put:
      tags:
      - "board"
      summary: "updateBoardsDescByIdBoard()"
      operationId: "updateBoardsDescByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Desc\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/boards_desc"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/emailKey/generate:
    post:
      tags:
      - "board"
      summary: "addBoardsEmailKeyGenerateByIdBoard()"
      operationId: "addBoardsEmailKeyGenerateByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/idOrganization:
    put:
      tags:
      - "board"
      summary: "updateBoardsIdOrganizationByIdBoard()"
      operationId: "updateBoardsIdOrganizationByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Id Organization\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/boards_idOrganization"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/labelNames/blue:
    put:
      tags:
      - "board"
      summary: "updateBoardsLabelNamesBlueByIdBoard()"
      operationId: "updateBoardsLabelNamesBlueByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Label Names Blue\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/labelNames_blue"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/labelNames/green:
    put:
      tags:
      - "board"
      summary: "updateBoardsLabelNamesGreenByIdBoard()"
      operationId: "updateBoardsLabelNamesGreenByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Label Names Green\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/labelNames_green"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/labelNames/orange:
    put:
      tags:
      - "board"
      summary: "updateBoardsLabelNamesOrangeByIdBoard()"
      operationId: "updateBoardsLabelNamesOrangeByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Label Names Orange\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/labelNames_orange"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/labelNames/purple:
    put:
      tags:
      - "board"
      summary: "updateBoardsLabelNamesPurpleByIdBoard()"
      operationId: "updateBoardsLabelNamesPurpleByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Label Names Purple\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/labelNames_purple"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/labelNames/red:
    put:
      tags:
      - "board"
      summary: "updateBoardsLabelNamesRedByIdBoard()"
      operationId: "updateBoardsLabelNamesRedByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Label Names Red\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/labelNames_red"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/labelNames/yellow:
    put:
      tags:
      - "board"
      summary: "updateBoardsLabelNamesYellowByIdBoard()"
      operationId: "updateBoardsLabelNamesYellowByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Label Names Yellow\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/labelNames_yellow"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/labels:
    get:
      tags:
      - "board"
      summary: "getBoardsLabelsByIdBoard()"
      operationId: "getBoardsLabelsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: color, idBoard, name or uses"
        required: false
        type: "string"
        default: "all"
      - name: "limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "board"
      summary: "addBoardsLabelsByIdBoard()"
      operationId: "addBoardsLabelsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Labels\" to be added."
        required: true
        schema:
          $ref: "#/definitions/boards_labels"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/labels/{idLabel}:
    get:
      tags:
      - "board"
      summary: "getBoardsLabelsByIdBoardByIdLabel()"
      operationId: "getBoardsLabelsByIdBoardByIdLabel"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "idLabel"
        in: "path"
        description: "idLabel"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: color, idBoard, name or uses"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/lists:
    get:
      tags:
      - "board"
      summary: "getBoardsListsByIdBoard()"
      operationId: "getBoardsListsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "cards"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "none"
      - name: "card_fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "filter"
        in: "query"
        description: "One of: all, closed, none or open"
        required: false
        type: "string"
        default: "open"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "board"
      summary: "addBoardsListsByIdBoard()"
      operationId: "addBoardsListsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Lists\" to be added."
        required: true
        schema:
          $ref: "#/definitions/boards_lists"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/lists/{filter}:
    get:
      tags:
      - "board"
      summary: "getBoardsListsByIdBoardByFilter()"
      operationId: "getBoardsListsByIdBoardByFilter"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /boards/{idBoard}/markAsViewed:
    post:
      tags:
      - "board"
      summary: "addBoardsMarkAsViewedByIdBoard()"
      operationId: "addBoardsMarkAsViewedByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/members:
    get:
      tags:
      - "board"
      summary: "getBoardsMembersByIdBoard()"
      operationId: "getBoardsMembersByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: admins, all, none, normal or owners"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "fullName and username"
      - name: "activity"
        in: "query"
        description: "true or false ; works for premium organizations only."
        required: false
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "board"
      summary: "updateBoardsMembersByIdBoard()"
      operationId: "updateBoardsMembersByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Members\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/boards_members"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/members/{filter}:
    get:
      tags:
      - "board"
      summary: "getBoardsMembersByIdBoardByFilter()"
      operationId: "getBoardsMembersByIdBoardByFilter"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /boards/{idBoard}/members/{idMember}:
    put:
      tags:
      - "board"
      summary: "updateBoardsMembersByIdBoardByIdMember()"
      operationId: "updateBoardsMembersByIdBoardByIdMember"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Members\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/boards_members"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "board"
      summary: "deleteBoardsMembersByIdBoardByIdMember()"
      operationId: "deleteBoardsMembersByIdBoardByIdMember"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/members/{idMember}/cards:
    get:
      tags:
      - "board"
      summary: "getBoardsMembersCardsByIdBoardByIdMember()"
      operationId: "getBoardsMembersCardsByIdBoardByIdMember"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "checkItemStates"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "board"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "name, desc, closed, idOrganization, pinned, url and prefs"
      - name: "list"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "list_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        required: false
        type: "string"
        default: "all"
      - name: "filter"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "visible"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/membersInvited:
    get:
      tags:
      - "board"
      summary: "getBoardsMembersInvitedByIdBoard()"
      operationId: "getBoardsMembersInvitedByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/membersInvited/{field}:
    get:
      tags:
      - "board"
      summary: "getBoardsMembersInvitedByIdBoardByField()"
      operationId: "getBoardsMembersInvitedByIdBoardByField"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/memberships:
    get:
      tags:
      - "board"
      summary: "getBoardsMembershipsByIdBoard()"
      operationId: "getBoardsMembershipsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        required: false
        type: "string"
        default: "all"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "fullName and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/memberships/{idMembership}:
    get:
      tags:
      - "board"
      summary: "getBoardsMembershipsByIdBoardByIdMembership()"
      operationId: "getBoardsMembershipsByIdBoardByIdMembership"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "idMembership"
        in: "path"
        description: "idMembership"
        required: true
        type: "string"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "fullName and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "board"
      summary: "updateBoardsMembershipsByIdBoardByIdMembership()"
      operationId: "updateBoardsMembershipsByIdBoardByIdMembership"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "idMembership"
        in: "path"
        description: "idMembership"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Memberships\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/boards_memberships"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/myPrefs:
    get:
      tags:
      - "board"
      summary: "getBoardsMyPrefsByIdBoard()"
      operationId: "getBoardsMyPrefsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/myPrefs/emailPosition:
    put:
      tags:
      - "board"
      summary: "updateBoardsMyPrefsEmailPositionByIdBoard()"
      operationId: "updateBoardsMyPrefsEmailPositionByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"My Prefs Email Position\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/myPrefs_emailPosition"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/myPrefs/idEmailList:
    put:
      tags:
      - "board"
      summary: "updateBoardsMyPrefsIdEmailListByIdBoard()"
      operationId: "updateBoardsMyPrefsIdEmailListByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"My Prefs Id Email List\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/myPrefs_idEmailList"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/myPrefs/showListGuide:
    put:
      tags:
      - "board"
      summary: "updateBoardsMyPrefsShowListGuideByIdBoard()"
      operationId: "updateBoardsMyPrefsShowListGuideByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"My Prefs Show List Guide\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/myPrefs_showListGuide"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/myPrefs/showSidebar:
    put:
      tags:
      - "board"
      summary: "updateBoardsMyPrefsShowSidebarByIdBoard()"
      operationId: "updateBoardsMyPrefsShowSidebarByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"My Prefs Show Sidebar\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/myPrefs_showSidebar"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/myPrefs/showSidebarActivity:
    put:
      tags:
      - "board"
      summary: "updateBoardsMyPrefsShowSidebarActivityByIdBoard()"
      operationId: "updateBoardsMyPrefsShowSidebarActivityByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"My Prefs Show Sidebar Activity\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/myPrefs_showSidebarActivity"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/myPrefs/showSidebarBoardActions:
    put:
      tags:
      - "board"
      summary: "updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard()"
      operationId: "updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"My Prefs Show Sidebar Board Actions\" to be\
          \ updated."
        required: true
        schema:
          $ref: "#/definitions/myPrefs_showSidebarBoardActions"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/myPrefs/showSidebarMembers:
    put:
      tags:
      - "board"
      summary: "updateBoardsMyPrefsShowSidebarMembersByIdBoard()"
      operationId: "updateBoardsMyPrefsShowSidebarMembersByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"My Prefs Show Sidebar Members\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/myPrefs_showSidebarMembers"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/name:
    put:
      tags:
      - "board"
      summary: "updateBoardsNameByIdBoard()"
      operationId: "updateBoardsNameByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/boards_name"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/organization:
    get:
      tags:
      - "board"
      summary: "getBoardsOrganizationByIdBoard()"
      operationId: "getBoardsOrganizationByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/organization/{field}:
    get:
      tags:
      - "board"
      summary: "getBoardsOrganizationByIdBoardByField()"
      operationId: "getBoardsOrganizationByIdBoardByField"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/powerUps:
    post:
      tags:
      - "board"
      summary: "addBoardsPowerUpsByIdBoard()"
      operationId: "addBoardsPowerUpsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Power Ups\" to be added."
        required: true
        schema:
          $ref: "#/definitions/boards_powerUps"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/powerUps/{powerUp}:
    delete:
      tags:
      - "board"
      summary: "deleteBoardsPowerUpsByIdBoardByPowerUp()"
      operationId: "deleteBoardsPowerUpsByIdBoardByPowerUp"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "powerUp"
        in: "path"
        description: "powerUp"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/prefs/background:
    put:
      tags:
      - "board"
      summary: "updateBoardsPrefsBackgroundByIdBoard()"
      operationId: "updateBoardsPrefsBackgroundByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Background\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_background"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/prefs/calendarFeedEnabled:
    put:
      tags:
      - "board"
      summary: "updateBoardsPrefsCalendarFeedEnabledByIdBoard()"
      operationId: "updateBoardsPrefsCalendarFeedEnabledByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Calendar Feed Enabled\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_calendarFeedEnabled"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/prefs/cardAging:
    put:
      tags:
      - "board"
      summary: "updateBoardsPrefsCardAgingByIdBoard()"
      operationId: "updateBoardsPrefsCardAgingByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Card Aging\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_cardAging"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/prefs/cardCovers:
    put:
      tags:
      - "board"
      summary: "updateBoardsPrefsCardCoversByIdBoard()"
      operationId: "updateBoardsPrefsCardCoversByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Card Covers\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_cardCovers"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/prefs/comments:
    put:
      tags:
      - "board"
      summary: "updateBoardsPrefsCommentsByIdBoard()"
      operationId: "updateBoardsPrefsCommentsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Comments\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_comments"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/prefs/invitations:
    put:
      tags:
      - "board"
      summary: "updateBoardsPrefsInvitationsByIdBoard()"
      operationId: "updateBoardsPrefsInvitationsByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Invitations\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_invitations"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/prefs/permissionLevel:
    put:
      tags:
      - "board"
      summary: "updateBoardsPrefsPermissionLevelByIdBoard()"
      operationId: "updateBoardsPrefsPermissionLevelByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Permission Level\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_permissionLevel"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/prefs/selfJoin:
    put:
      tags:
      - "board"
      summary: "updateBoardsPrefsSelfJoinByIdBoard()"
      operationId: "updateBoardsPrefsSelfJoinByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Self Join\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_selfJoin"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/prefs/voting:
    put:
      tags:
      - "board"
      summary: "updateBoardsPrefsVotingByIdBoard()"
      operationId: "updateBoardsPrefsVotingByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Voting\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_voting"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/subscribed:
    put:
      tags:
      - "board"
      summary: "updateBoardsSubscribedByIdBoard()"
      operationId: "updateBoardsSubscribedByIdBoard"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Boards Subscribed\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/boards_subscribed"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /boards/{idBoard}/{field}:
    get:
      tags:
      - "board"
      summary: "getBoardsByIdBoardByField()"
      operationId: "getBoardsByIdBoardByField"
      parameters:
      - name: "idBoard"
        in: "path"
        description: "board_id"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /cards:
    post:
      tags:
      - "card"
      summary: "addCards()"
      operationId: "addCards"
      parameters:
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards\" to be added."
        required: true
        schema:
          $ref: "#/definitions/cards"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}:
    get:
      tags:
      - "card"
      summary: "getCardsByIdCard()"
      operationId: "getCardsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "actions_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "action_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "action_memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "membersVoted"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberVoted_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "checkItemStates"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "checkItemState_fields"
        in: "query"
        description: "all or a comma-separated list of: idCheckItem or state"
        required: false
        type: "string"
        default: "all"
      - name: "checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "checklist_fields"
        in: "query"
        description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        required: false
        type: "string"
        default: "all"
      - name: "board"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "name, desc, descData, closed, idOrganization, pinned, url and prefs"
      - name: "list"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "list_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        required: false
        type: "string"
        default: "all"
      - name: "stickers"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "sticker_fields"
        in: "query"
        description: "all or a comma-separated list of: image, imageScaled, imageUrl,\
          \ left, rotate, top or zIndex"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "badges, checkItemStates, closed, dateLastActivity, desc, descData,\
          \ due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort,\
          \ idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl\
          \ and url"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "card"
      summary: "updateCardsByIdCard()"
      operationId: "updateCardsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "card"
      summary: "deleteCardsByIdCard()"
      operationId: "deleteCardsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/actions:
    get:
      tags:
      - "card"
      summary: "getCardsActionsByIdCard()"
      operationId: "getCardsActionsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
        default: "commentCard and updateCard:idList"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page * limit must be less than 1000"
        required: false
        type: "string"
        default: "0"
      - name: "idModels"
        in: "query"
        description: "Only return actions related to these model ids"
        required: false
        type: "string"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/actions/comments:
    post:
      tags:
      - "card"
      summary: "addCardsActionsCommentsByIdCard()"
      operationId: "addCardsActionsCommentsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Actions Comments\" to be added."
        required: true
        schema:
          $ref: "#/definitions/actions_comments"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/actions/{idAction}/comments:
    put:
      tags:
      - "card"
      summary: "updateCardsActionsCommentsByIdCardByIdAction()"
      description: "This can only be done by the original author of the comment."
      operationId: "updateCardsActionsCommentsByIdCardByIdAction"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Actions Comments\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_actions_comments"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "card"
      summary: "deleteCardsActionsCommentsByIdCardByIdAction()"
      description: "This can only be done by the original author of the comment, or\
        \ someone with higher permissions than the original author."
      operationId: "deleteCardsActionsCommentsByIdCardByIdAction"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idAction"
        in: "path"
        description: "idAction"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/attachments:
    get:
      tags:
      - "card"
      summary: "getCardsAttachmentsByIdCard()"
      operationId: "getCardsAttachmentsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "filter"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "card"
      summary: "addCardsAttachmentsByIdCard()"
      operationId: "addCardsAttachmentsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Attachments\" to be added."
        required: true
        schema:
          $ref: "#/definitions/cards_attachments"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/attachments/{idAttachment}:
    get:
      tags:
      - "card"
      summary: "getCardsAttachmentsByIdCardByIdAttachment()"
      operationId: "getCardsAttachmentsByIdCardByIdAttachment"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idAttachment"
        in: "path"
        description: "idAttachment"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "card"
      summary: "deleteCardsAttachmentsByIdCardByIdAttachment()"
      operationId: "deleteCardsAttachmentsByIdCardByIdAttachment"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idAttachment"
        in: "path"
        description: "idAttachment"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/board:
    get:
      tags:
      - "card"
      summary: "getCardsBoardByIdCard()"
      operationId: "getCardsBoardByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/board/{field}:
    get:
      tags:
      - "card"
      summary: "getCardsBoardByIdCardByField()"
      operationId: "getCardsBoardByIdCardByField"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checkItemStates:
    get:
      tags:
      - "card"
      summary: "getCardsCheckItemStatesByIdCard()"
      operationId: "getCardsCheckItemStatesByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: idCheckItem or state"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}:
    put:
      tags:
      - "card"
      summary: "updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem()"
      operationId: "updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idChecklistCurrent"
        in: "path"
        description: "idChecklistCurrent"
        required: true
        type: "string"
      - name: "idCheckItem"
        in: "path"
        description: "idCheckItem"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Checklist Id Checklist Current Check Item\"\
          \ to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_checklist_idChecklistCurrent_checkItem"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checklist/{idChecklist}/checkItem:
    post:
      tags:
      - "card"
      summary: "addCardsChecklistCheckItemByIdCardByIdChecklist()"
      operationId: "addCardsChecklistCheckItemByIdCardByIdChecklist"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Checklist Check Item\" to be added."
        required: true
        schema:
          $ref: "#/definitions/cards_checklist_checkItem"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}:
    delete:
      tags:
      - "card"
      summary: "deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem()"
      operationId: "deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "idCheckItem"
        in: "path"
        description: "idCheckItem"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard:
    post:
      tags:
      - "card"
      summary: "addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem()"
      operationId: "addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "idCheckItem"
        in: "path"
        description: "idCheckItem"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name:
    put:
      tags:
      - "card"
      summary: "updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem()"
      operationId: "updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "idCheckItem"
        in: "path"
        description: "idCheckItem"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Checklist Check Item Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_checklist_checkItem_name"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos:
    put:
      tags:
      - "card"
      summary: "updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem()"
      operationId: "updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "idCheckItem"
        in: "path"
        description: "idCheckItem"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Checklist Check Item Pos\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_checklist_checkItem_pos"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state:
    put:
      tags:
      - "card"
      summary: "updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem()"
      operationId: "updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "idCheckItem"
        in: "path"
        description: "idCheckItem"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Checklist Check Item State\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_checklist_checkItem_state"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checklists:
    get:
      tags:
      - "card"
      summary: "getCardsChecklistsByIdCard()"
      operationId: "getCardsChecklistsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "cards"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "none"
      - name: "card_fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "checkItems"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "checkItem_fields"
        in: "query"
        description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        required: false
        type: "string"
        default: "name, nameData, pos and state"
      - name: "filter"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "card"
      summary: "addCardsChecklistsByIdCard()"
      operationId: "addCardsChecklistsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Checklists\" to be added."
        required: true
        schema:
          $ref: "#/definitions/cards_checklists"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/checklists/{idChecklist}:
    delete:
      tags:
      - "card"
      summary: "deleteCardsChecklistsByIdCardByIdChecklist()"
      operationId: "deleteCardsChecklistsByIdCardByIdChecklist"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/closed:
    put:
      tags:
      - "card"
      summary: "updateCardsClosedByIdCard()"
      operationId: "updateCardsClosedByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Closed\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_closed"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/desc:
    put:
      tags:
      - "card"
      summary: "updateCardsDescByIdCard()"
      operationId: "updateCardsDescByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Desc\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_desc"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/due:
    put:
      tags:
      - "card"
      summary: "updateCardsDueByIdCard()"
      operationId: "updateCardsDueByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Due\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_due"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/idAttachmentCover:
    put:
      tags:
      - "card"
      summary: "updateCardsIdAttachmentCoverByIdCard()"
      operationId: "updateCardsIdAttachmentCoverByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Id Attachment Cover\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_idAttachmentCover"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/idBoard:
    put:
      tags:
      - "card"
      summary: "updateCardsIdBoardByIdCard()"
      operationId: "updateCardsIdBoardByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Id Board\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_idBoard"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/idLabels:
    post:
      tags:
      - "card"
      summary: "addCardsIdLabelsByIdCard()"
      operationId: "addCardsIdLabelsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Id Labels\" to be added."
        required: true
        schema:
          $ref: "#/definitions/cards_idLabels"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/idLabels/{idLabel}:
    delete:
      tags:
      - "card"
      summary: "deleteCardsIdLabelsByIdCardByIdLabel()"
      operationId: "deleteCardsIdLabelsByIdCardByIdLabel"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idLabel"
        in: "path"
        description: "idLabel"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/idList:
    put:
      tags:
      - "card"
      summary: "updateCardsIdListByIdCard()"
      operationId: "updateCardsIdListByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Id List\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_idList"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/idMembers:
    post:
      tags:
      - "card"
      summary: "addCardsIdMembersByIdCard()"
      operationId: "addCardsIdMembersByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Id Members\" to be added."
        required: true
        schema:
          $ref: "#/definitions/cards_idMembers"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "card"
      summary: "updateCardsIdMembersByIdCard()"
      operationId: "updateCardsIdMembersByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Id Members\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_idMembers"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/idMembers/{idMember}:
    delete:
      tags:
      - "card"
      summary: "deleteCardsIdMembersByIdCardByIdMember()"
      operationId: "deleteCardsIdMembersByIdCardByIdMember"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/labels:
    post:
      tags:
      - "card"
      summary: "addCardsLabelsByIdCard()"
      operationId: "addCardsLabelsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Labels\" to be added."
        required: true
        schema:
          $ref: "#/definitions/cards_labels"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "card"
      summary: "updateCardsLabelsByIdCard()"
      operationId: "updateCardsLabelsByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Labels\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_labels"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/labels/{color}:
    delete:
      tags:
      - "card"
      summary: "deleteCardsLabelsByIdCardByColor()"
      operationId: "deleteCardsLabelsByIdCardByColor"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "color"
        in: "path"
        description: "color"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/list:
    get:
      tags:
      - "card"
      summary: "getCardsListByIdCard()"
      operationId: "getCardsListByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/list/{field}:
    get:
      tags:
      - "card"
      summary: "getCardsListByIdCardByField()"
      operationId: "getCardsListByIdCardByField"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/markAssociatedNotificationsRead:
    post:
      tags:
      - "card"
      summary: "addCardsMarkAssociatedNotificationsReadByIdCard()"
      operationId: "addCardsMarkAssociatedNotificationsReadByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/members:
    get:
      tags:
      - "card"
      summary: "getCardsMembersByIdCard()"
      operationId: "getCardsMembersByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/membersVoted:
    get:
      tags:
      - "card"
      summary: "getCardsMembersVotedByIdCard()"
      operationId: "getCardsMembersVotedByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "card"
      summary: "addCardsMembersVotedByIdCard()"
      operationId: "addCardsMembersVotedByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Members Voted\" to be added."
        required: true
        schema:
          $ref: "#/definitions/cards_membersVoted"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/membersVoted/{idMember}:
    delete:
      tags:
      - "card"
      summary: "deleteCardsMembersVotedByIdCardByIdMember()"
      operationId: "deleteCardsMembersVotedByIdCardByIdMember"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/name:
    put:
      tags:
      - "card"
      summary: "updateCardsNameByIdCard()"
      operationId: "updateCardsNameByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_name"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/pos:
    put:
      tags:
      - "card"
      summary: "updateCardsPosByIdCard()"
      operationId: "updateCardsPosByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Pos\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_pos"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/stickers:
    get:
      tags:
      - "card"
      summary: "getCardsStickersByIdCard()"
      operationId: "getCardsStickersByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: image, imageScaled, imageUrl,\
          \ left, rotate, top or zIndex"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "card"
      summary: "addCardsStickersByIdCard()"
      operationId: "addCardsStickersByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Stickers\" to be added."
        required: true
        schema:
          $ref: "#/definitions/cards_stickers"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/stickers/{idSticker}:
    get:
      tags:
      - "card"
      summary: "getCardsStickersByIdCardByIdSticker()"
      operationId: "getCardsStickersByIdCardByIdSticker"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idSticker"
        in: "path"
        description: "idSticker"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: image, imageScaled, imageUrl,\
          \ left, rotate, top or zIndex"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "card"
      summary: "updateCardsStickersByIdCardByIdSticker()"
      operationId: "updateCardsStickersByIdCardByIdSticker"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idSticker"
        in: "path"
        description: "idSticker"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Stickers\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_stickers"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "card"
      summary: "deleteCardsStickersByIdCardByIdSticker()"
      operationId: "deleteCardsStickersByIdCardByIdSticker"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "idSticker"
        in: "path"
        description: "idSticker"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/subscribed:
    put:
      tags:
      - "card"
      summary: "updateCardsSubscribedByIdCard()"
      operationId: "updateCardsSubscribedByIdCard"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Cards Subscribed\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/cards_subscribed"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /cards/{idCard}/{field}:
    get:
      tags:
      - "card"
      summary: "getCardsByIdCardByField()"
      operationId: "getCardsByIdCardByField"
      parameters:
      - name: "idCard"
        in: "path"
        description: "card id or shortlink"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /checklists:
    post:
      tags:
      - "checklist"
      summary: "addChecklists()"
      operationId: "addChecklists"
      parameters:
      - in: "body"
        name: "body"
        description: "Attributes of \"Checklists\" to be added."
        required: true
        schema:
          $ref: "#/definitions/checklists"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}:
    get:
      tags:
      - "checklist"
      summary: "getChecklistsByIdChecklist()"
      operationId: "getChecklistsByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "cards"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "none"
      - name: "card_fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "checkItems"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "checkItem_fields"
        in: "query"
        description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        required: false
        type: "string"
        default: "name, nameData, pos and state"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "checklist"
      summary: "updateChecklistsByIdChecklist()"
      operationId: "updateChecklistsByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Checklists\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/checklists"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "checklist"
      summary: "deleteChecklistsByIdChecklist()"
      operationId: "deleteChecklistsByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}/board:
    get:
      tags:
      - "checklist"
      summary: "getChecklistsBoardByIdChecklist()"
      operationId: "getChecklistsBoardByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}/board/{field}:
    get:
      tags:
      - "checklist"
      summary: "getChecklistsBoardByIdChecklistByField()"
      operationId: "getChecklistsBoardByIdChecklistByField"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}/cards:
    get:
      tags:
      - "checklist"
      summary: "getChecklistsCardsByIdChecklist()"
      operationId: "getChecklistsCardsByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "stickers"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "checkItemStates"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
      - name: "since"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all, closed, none or open"
        required: false
        type: "string"
        default: "open"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}/cards/{filter}:
    get:
      tags:
      - "checklist"
      summary: "getChecklistsCardsByIdChecklistByFilter()"
      operationId: "getChecklistsCardsByIdChecklistByFilter"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /checklists/{idChecklist}/checkItems:
    get:
      tags:
      - "checklist"
      summary: "getChecklistsCheckItemsByIdChecklist()"
      operationId: "getChecklistsCheckItemsByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        required: false
        type: "string"
        default: "name, nameData, pos and state"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "checklist"
      summary: "addChecklistsCheckItemsByIdChecklist()"
      operationId: "addChecklistsCheckItemsByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Checklists Check Items\" to be added."
        required: true
        schema:
          $ref: "#/definitions/checklists_checkItems"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}/checkItems/{idCheckItem}:
    get:
      tags:
      - "checklist"
      summary: "getChecklistsCheckItemsByIdChecklistByIdCheckItem()"
      operationId: "getChecklistsCheckItemsByIdChecklistByIdCheckItem"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "idCheckItem"
        in: "path"
        description: "idCheckItem"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        required: false
        type: "string"
        default: "name, nameData, pos and state"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "checklist"
      summary: "deleteChecklistsCheckItemsByIdChecklistByIdCheckItem()"
      operationId: "deleteChecklistsCheckItemsByIdChecklistByIdCheckItem"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "idCheckItem"
        in: "path"
        description: "idCheckItem"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}/idCard:
    put:
      tags:
      - "checklist"
      summary: "updateChecklistsIdCardByIdChecklist()"
      operationId: "updateChecklistsIdCardByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Checklists Id Card\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/checklists_idCard"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}/name:
    put:
      tags:
      - "checklist"
      summary: "updateChecklistsNameByIdChecklist()"
      operationId: "updateChecklistsNameByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Checklists Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/checklists_name"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}/pos:
    put:
      tags:
      - "checklist"
      summary: "updateChecklistsPosByIdChecklist()"
      operationId: "updateChecklistsPosByIdChecklist"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Checklists Pos\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/checklists_pos"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /checklists/{idChecklist}/{field}:
    get:
      tags:
      - "checklist"
      summary: "getChecklistsByIdChecklistByField()"
      operationId: "getChecklistsByIdChecklistByField"
      parameters:
      - name: "idChecklist"
        in: "path"
        description: "idChecklist"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /labels:
    post:
      tags:
      - "label"
      summary: "addLabels()"
      operationId: "addLabels"
      parameters:
      - in: "body"
        name: "body"
        description: "Attributes of \"Labels\" to be added."
        required: true
        schema:
          $ref: "#/definitions/labels"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /labels/{idLabel}:
    get:
      tags:
      - "label"
      summary: "getLabelsByIdLabel()"
      operationId: "getLabelsByIdLabel"
      parameters:
      - name: "idLabel"
        in: "path"
        description: "idLabel"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: color, idBoard, name or uses"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "label"
      summary: "updateLabelsByIdLabel()"
      operationId: "updateLabelsByIdLabel"
      parameters:
      - name: "idLabel"
        in: "path"
        description: "idLabel"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Labels\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/labels"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "label"
      summary: "deleteLabelsByIdLabel()"
      operationId: "deleteLabelsByIdLabel"
      parameters:
      - name: "idLabel"
        in: "path"
        description: "idLabel"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /labels/{idLabel}/board:
    get:
      tags:
      - "label"
      summary: "getLabelsBoardByIdLabel()"
      operationId: "getLabelsBoardByIdLabel"
      parameters:
      - name: "idLabel"
        in: "path"
        description: "idLabel"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /labels/{idLabel}/board/{field}:
    get:
      tags:
      - "label"
      summary: "getLabelsBoardByIdLabelByField()"
      operationId: "getLabelsBoardByIdLabelByField"
      parameters:
      - name: "idLabel"
        in: "path"
        description: "idLabel"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /labels/{idLabel}/color:
    put:
      tags:
      - "label"
      summary: "updateLabelsColorByIdLabel()"
      operationId: "updateLabelsColorByIdLabel"
      parameters:
      - name: "idLabel"
        in: "path"
        description: "idLabel"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Labels Color\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/labels_color"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /labels/{idLabel}/name:
    put:
      tags:
      - "label"
      summary: "updateLabelsNameByIdLabel()"
      operationId: "updateLabelsNameByIdLabel"
      parameters:
      - name: "idLabel"
        in: "path"
        description: "idLabel"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Labels Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/labels_name"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists:
    post:
      tags:
      - "list"
      summary: "addLists()"
      operationId: "addLists"
      parameters:
      - in: "body"
        name: "body"
        description: "Attributes of \"Lists\" to be added."
        required: true
        schema:
          $ref: "#/definitions/lists"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}:
    get:
      tags:
      - "list"
      summary: "getListsByIdList()"
      operationId: "getListsByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - name: "cards"
        in: "query"
        description: "One of: all, closed, none or open"
        required: false
        type: "string"
        default: "none"
      - name: "card_fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "board"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "name, desc, descData, closed, idOrganization, pinned, url and prefs"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        required: false
        type: "string"
        default: "name, closed, idBoard and pos"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "list"
      summary: "updateListsByIdList()"
      operationId: "updateListsByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Lists\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/lists"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/actions:
    get:
      tags:
      - "list"
      summary: "getListsActionsByIdList()"
      operationId: "getListsActionsByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - name: "entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page * limit must be less than 1000"
        required: false
        type: "string"
        default: "0"
      - name: "idModels"
        in: "query"
        description: "Only return actions related to these model ids"
        required: false
        type: "string"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/archiveAllCards:
    post:
      tags:
      - "list"
      summary: "addListsArchiveAllCardsByIdList()"
      operationId: "addListsArchiveAllCardsByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/board:
    get:
      tags:
      - "list"
      summary: "getListsBoardByIdList()"
      operationId: "getListsBoardByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/board/{field}:
    get:
      tags:
      - "list"
      summary: "getListsBoardByIdListByField()"
      operationId: "getListsBoardByIdListByField"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/cards:
    get:
      tags:
      - "list"
      summary: "getListsCardsByIdList()"
      operationId: "getListsCardsByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "stickers"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "checkItemStates"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
      - name: "since"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all, closed, none or open"
        required: false
        type: "string"
        default: "open"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "list"
      summary: "addListsCardsByIdList()"
      operationId: "addListsCardsByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Lists Cards\" to be added."
        required: true
        schema:
          $ref: "#/definitions/lists_cards"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/cards/{filter}:
    get:
      tags:
      - "list"
      summary: "getListsCardsByIdListByFilter()"
      operationId: "getListsCardsByIdListByFilter"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /lists/{idList}/closed:
    put:
      tags:
      - "list"
      summary: "updateListsClosedByIdList()"
      operationId: "updateListsClosedByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Lists Closed\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/lists_closed"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/idBoard:
    put:
      tags:
      - "list"
      summary: "updateListsIdBoardByIdList()"
      operationId: "updateListsIdBoardByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Lists Id Board\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/lists_idBoard"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/moveAllCards:
    post:
      tags:
      - "list"
      summary: "addListsMoveAllCardsByIdList()"
      operationId: "addListsMoveAllCardsByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Lists Move All Cards\" to be added."
        required: true
        schema:
          $ref: "#/definitions/lists_moveAllCards"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/name:
    put:
      tags:
      - "list"
      summary: "updateListsNameByIdList()"
      operationId: "updateListsNameByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Lists Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/lists_name"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/pos:
    put:
      tags:
      - "list"
      summary: "updateListsPosByIdList()"
      operationId: "updateListsPosByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Lists Pos\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/lists_pos"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/subscribed:
    put:
      tags:
      - "list"
      summary: "updateListsSubscribedByIdList()"
      operationId: "updateListsSubscribedByIdList"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Lists Subscribed\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/lists_subscribed"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /lists/{idList}/{field}:
    get:
      tags:
      - "list"
      summary: "getListsByIdListByField()"
      operationId: "getListsByIdListByField"
      parameters:
      - name: "idList"
        in: "path"
        description: "idList"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /members/{idMember}:
    get:
      tags:
      - "member"
      summary: "getMembersByIdMember()"
      description: "If you specify 'me' as the username, this call will respond as\
        \ if you had supplied the username associated with the supplied token"
      operationId: "getMembersByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "actions_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "action_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "action_since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "action_before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "cards"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "none"
      - name: "card_fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "card_members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "card_member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "card_attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "card_attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "url and previews"
      - name: "card_stickers"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "boards"
        in: "query"
        description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        required: false
        type: "string"
      - name: "board_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "name, closed, idOrganization and pinned"
      - name: "board_actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "board_actions_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_actions_display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_actions_format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "board_actions_since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "board_actions_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "board_action_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "board_lists"
        in: "query"
        description: "One of: all, closed, none or open"
        required: false
        type: "string"
        default: "none"
      - name: "board_memberships"
        in: "query"
        description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        required: false
        type: "string"
        default: "none"
      - name: "board_organization"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_organization_fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "name and displayName"
      - name: "boardsInvited"
        in: "query"
        description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        required: false
        type: "string"
      - name: "boardsInvited_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "name, closed, idOrganization and pinned"
      - name: "boardStars"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "savedSearches"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "organizations"
        in: "query"
        description: "One of: all, members, none or public"
        required: false
        type: "string"
        default: "none"
      - name: "organization_fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "all"
      - name: "organization_paid_account"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "organizationsInvited"
        in: "query"
        description: "One of: all, members, none or public"
        required: false
        type: "string"
        default: "none"
      - name: "organizationsInvited_fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "all"
      - name: "notifications"
        in: "query"
        description: "all or a comma-separated list of: addAdminToBoard, addAdminToOrganization,\
          \ addedAttachmentToCard, addedMemberToCard, addedToBoard, addedToCard, addedToOrganization,\
          \ cardDueSoon, changeCard, closeBoard, commentCard, createdCard, declinedInvitationToBoard,\
          \ declinedInvitationToOrganization, invitedToBoard, invitedToOrganization,\
          \ makeAdminOfBoard, makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,\
          \ removedFromBoard, removedFromCard, removedFromOrganization, removedMemberFromCard,\
          \ unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization or updateCheckItemStateOnCard"
        required: false
        type: "string"
      - name: "notifications_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "notifications_display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "notifications_limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "notification_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator,\
          \ type or unread"
        required: false
        type: "string"
        default: "all"
      - name: "notification_memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "notification_memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "notification_before"
        in: "query"
        description: "An id, or null"
        required: false
        type: "string"
      - name: "notification_since"
        in: "query"
        description: "An id, or null"
        required: false
        type: "string"
      - name: "tokens"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "paid_account"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "boardBackgrounds"
        in: "query"
        description: "One of: all, custom, default, none or premium"
        required: false
        type: "string"
        default: "none"
      - name: "customBoardBackgrounds"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "customStickers"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "customEmoji"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "member"
      summary: "updateMembersByIdMember()"
      operationId: "updateMembersByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/actions:
    get:
      tags:
      - "member"
      summary: "getMembersActionsByIdMember()"
      operationId: "getMembersActionsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page * limit must be less than 1000"
        required: false
        type: "string"
        default: "0"
      - name: "idModels"
        in: "query"
        description: "Only return actions related to these model ids"
        required: false
        type: "string"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/avatar:
    post:
      tags:
      - "member"
      summary: "addMembersAvatarByIdMember()"
      operationId: "addMembersAvatarByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Avatar\" to be added."
        required: true
        schema:
          $ref: "#/definitions/members_avatar"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/avatarSource:
    put:
      tags:
      - "member"
      summary: "updateMembersAvatarSourceByIdMember()"
      operationId: "updateMembersAvatarSourceByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Avatar Source\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_avatarSource"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/bio:
    put:
      tags:
      - "member"
      summary: "updateMembersBioByIdMember()"
      operationId: "updateMembersBioByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Bio\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_bio"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/boardBackgrounds:
    get:
      tags:
      - "member"
      summary: "getMembersBoardBackgroundsByIdMember()"
      operationId: "getMembersBoardBackgroundsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all, custom, default, none or premium"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "member"
      summary: "addMembersBoardBackgroundsByIdMember()"
      operationId: "addMembersBoardBackgroundsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Board Backgrounds\" to be added."
        required: true
        schema:
          $ref: "#/definitions/members_boardBackgrounds"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/boardBackgrounds/{idBoardBackground}:
    get:
      tags:
      - "member"
      summary: "getMembersBoardBackgroundsByIdMemberByIdBoardBackground()"
      operationId: "getMembersBoardBackgroundsByIdMemberByIdBoardBackground"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardBackground"
        in: "path"
        description: "idBoardBackground"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: brightness, fullSizeUrl, scaled\
          \ or tile"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "member"
      summary: "updateMembersBoardBackgroundsByIdMemberByIdBoardBackground()"
      operationId: "updateMembersBoardBackgroundsByIdMemberByIdBoardBackground"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardBackground"
        in: "path"
        description: "idBoardBackground"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Board Backgrounds\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_boardBackgrounds"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "member"
      summary: "deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground()"
      operationId: "deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardBackground"
        in: "path"
        description: "idBoardBackground"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/boardStars:
    get:
      tags:
      - "member"
      summary: "getMembersBoardStarsByIdMember()"
      operationId: "getMembersBoardStarsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "member"
      summary: "addMembersBoardStarsByIdMember()"
      operationId: "addMembersBoardStarsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Board Stars\" to be added."
        required: true
        schema:
          $ref: "#/definitions/members_boardStars"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/boardStars/{idBoardStar}:
    get:
      tags:
      - "member"
      summary: "getMembersBoardStarsByIdMemberByIdBoardStar()"
      operationId: "getMembersBoardStarsByIdMemberByIdBoardStar"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardStar"
        in: "path"
        description: "idBoardStar"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "member"
      summary: "updateMembersBoardStarsByIdMemberByIdBoardStar()"
      operationId: "updateMembersBoardStarsByIdMemberByIdBoardStar"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardStar"
        in: "path"
        description: "idBoardStar"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Board Stars\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_boardStars"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "member"
      summary: "deleteMembersBoardStarsByIdMemberByIdBoardStar()"
      operationId: "deleteMembersBoardStarsByIdMemberByIdBoardStar"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardStar"
        in: "path"
        description: "idBoardStar"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/boardStars/{idBoardStar}/idBoard:
    put:
      tags:
      - "member"
      summary: "updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar()"
      operationId: "updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardStar"
        in: "path"
        description: "idBoardStar"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Board Stars Id Board\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_boardStars_idBoard"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/boardStars/{idBoardStar}/pos:
    put:
      tags:
      - "member"
      summary: "updateMembersBoardStarsPosByIdMemberByIdBoardStar()"
      operationId: "updateMembersBoardStarsPosByIdMemberByIdBoardStar"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardStar"
        in: "path"
        description: "idBoardStar"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Board Stars Pos\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_boardStars_pos"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/boards:
    get:
      tags:
      - "member"
      summary: "getMembersBoardsByIdMember()"
      operationId: "getMembersBoardsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "actions_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "actions_format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "actions_since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "action_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "memberships"
        in: "query"
        description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        required: false
        type: "string"
        default: "none"
      - name: "organization"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "organization_fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "name and displayName"
      - name: "lists"
        in: "query"
        description: "One of: all, closed, none or open"
        required: false
        type: "string"
        default: "none"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/boards/{filter}:
    get:
      tags:
      - "member"
      summary: "getMembersBoardsByIdMemberByFilter()"
      operationId: "getMembersBoardsByIdMemberByFilter"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /members/{idMember}/boardsInvited:
    get:
      tags:
      - "member"
      summary: "getMembersBoardsInvitedByIdMember()"
      operationId: "getMembersBoardsInvitedByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/boardsInvited/{field}:
    get:
      tags:
      - "member"
      summary: "getMembersBoardsInvitedByIdMemberByField()"
      operationId: "getMembersBoardsInvitedByIdMemberByField"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/cards:
    get:
      tags:
      - "member"
      summary: "getMembersCardsByIdMember()"
      operationId: "getMembersCardsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "stickers"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "checkItemStates"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
      - name: "since"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "visible"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/cards/{filter}:
    get:
      tags:
      - "member"
      summary: "getMembersCardsByIdMemberByFilter()"
      operationId: "getMembersCardsByIdMemberByFilter"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /members/{idMember}/customBoardBackgrounds:
    get:
      tags:
      - "member"
      summary: "getMembersCustomBoardBackgroundsByIdMember()"
      operationId: "getMembersCustomBoardBackgroundsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "member"
      summary: "addMembersCustomBoardBackgroundsByIdMember()"
      operationId: "addMembersCustomBoardBackgroundsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Custom Board Backgrounds\" to be added."
        required: true
        schema:
          $ref: "#/definitions/members_customBoardBackgrounds"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/customBoardBackgrounds/{idBoardBackground}:
    get:
      tags:
      - "member"
      summary: "getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()"
      operationId: "getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardBackground"
        in: "path"
        description: "idBoardBackground"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: brightness, fullSizeUrl, scaled\
          \ or tile"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "member"
      summary: "updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()"
      operationId: "updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardBackground"
        in: "path"
        description: "idBoardBackground"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Custom Board Backgrounds\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_customBoardBackgrounds"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "member"
      summary: "deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()"
      operationId: "deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idBoardBackground"
        in: "path"
        description: "idBoardBackground"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/customEmoji:
    get:
      tags:
      - "member"
      summary: "getMembersCustomEmojiByIdMember()"
      description: "This gets the list of all of the user’s uploaded emoji"
      operationId: "getMembersCustomEmojiByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "member"
      summary: "addMembersCustomEmojiByIdMember()"
      operationId: "addMembersCustomEmojiByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Custom Emoji\" to be added."
        required: true
        schema:
          $ref: "#/definitions/members_customEmoji"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/customEmoji/{idCustomEmoji}:
    get:
      tags:
      - "member"
      summary: "getMembersCustomEmojiByIdMemberByIdCustomEmoji()"
      operationId: "getMembersCustomEmojiByIdMemberByIdCustomEmoji"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idCustomEmoji"
        in: "path"
        description: "idCustomEmoji"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: name or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/customStickers:
    get:
      tags:
      - "member"
      summary: "getMembersCustomStickersByIdMember()"
      description: "This gets a list of all of the user’s uploaded stickers"
      operationId: "getMembersCustomStickersByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "member"
      summary: "addMembersCustomStickersByIdMember()"
      operationId: "addMembersCustomStickersByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Custom Stickers\" to be added."
        required: true
        schema:
          $ref: "#/definitions/members_customStickers"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/customStickers/{idCustomSticker}:
    get:
      tags:
      - "member"
      summary: "getMembersCustomStickersByIdMemberByIdCustomSticker()"
      operationId: "getMembersCustomStickersByIdMemberByIdCustomSticker"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idCustomSticker"
        in: "path"
        description: "idCustomSticker"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: scaled or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "member"
      summary: "deleteMembersCustomStickersByIdMemberByIdCustomSticker()"
      operationId: "deleteMembersCustomStickersByIdMemberByIdCustomSticker"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idCustomSticker"
        in: "path"
        description: "idCustomSticker"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/deltas:
    get:
      tags:
      - "member"
      summary: "getMembersDeltasByIdMember()"
      operationId: "getMembersDeltasByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "tags"
        in: "query"
        description: "A valid tag for subscribing"
        required: true
        type: "string"
      - name: "ixLastUpdate"
        in: "query"
        description: "a number from -1 to Infinity"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/fullName:
    put:
      tags:
      - "member"
      summary: "updateMembersFullNameByIdMember()"
      operationId: "updateMembersFullNameByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Full Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_fullName"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/initials:
    put:
      tags:
      - "member"
      summary: "updateMembersInitialsByIdMember()"
      operationId: "updateMembersInitialsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Initials\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_initials"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/notifications:
    get:
      tags:
      - "member"
      summary: "getMembersNotificationsByIdMember()"
      description: "You can only read the notifications for the member associated\
        \ with the supplied token"
      operationId: "getMembersNotificationsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: addAdminToBoard, addAdminToOrganization,\
          \ addedAttachmentToCard, addedMemberToCard, addedToBoard, addedToCard, addedToOrganization,\
          \ cardDueSoon, changeCard, closeBoard, commentCard, createdCard, declinedInvitationToBoard,\
          \ declinedInvitationToOrganization, invitedToBoard, invitedToOrganization,\
          \ makeAdminOfBoard, makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,\
          \ removedFromBoard, removedFromCard, removedFromOrganization, removedMemberFromCard,\
          \ unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization or updateCheckItemStateOnCard"
        required: false
        type: "string"
        default: "all"
      - name: "read_filter"
        in: "query"
        description: "One of: all, read or unread"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator,\
          \ type or unread"
        required: false
        type: "string"
        default: "all"
      - name: "limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "page"
        in: "query"
        description: "a number from 0 to 100"
        required: false
        type: "string"
        default: "0"
      - name: "before"
        in: "query"
        description: "An id, or null"
        required: false
        type: "string"
      - name: "since"
        in: "query"
        description: "An id, or null"
        required: false
        type: "string"
      - name: "memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/notifications/{filter}:
    get:
      tags:
      - "member"
      summary: "getMembersNotificationsByIdMemberByFilter()"
      operationId: "getMembersNotificationsByIdMemberByFilter"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /members/{idMember}/oneTimeMessagesDismissed:
    post:
      tags:
      - "member"
      summary: "addMembersOneTimeMessagesDismissedByIdMember()"
      operationId: "addMembersOneTimeMessagesDismissedByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members One Time Messages Dismissed\" to be\
          \ added."
        required: true
        schema:
          $ref: "#/definitions/members_oneTimeMessagesDismissed"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/organizations:
    get:
      tags:
      - "member"
      summary: "getMembersOrganizationsByIdMember()"
      operationId: "getMembersOrganizationsByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all, members, none or public"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "all"
      - name: "paid_account"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/organizations/{filter}:
    get:
      tags:
      - "member"
      summary: "getMembersOrganizationsByIdMemberByFilter()"
      operationId: "getMembersOrganizationsByIdMemberByFilter"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /members/{idMember}/organizationsInvited:
    get:
      tags:
      - "member"
      summary: "getMembersOrganizationsInvitedByIdMember()"
      operationId: "getMembersOrganizationsInvitedByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/organizationsInvited/{field}:
    get:
      tags:
      - "member"
      summary: "getMembersOrganizationsInvitedByIdMemberByField()"
      operationId: "getMembersOrganizationsInvitedByIdMemberByField"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/prefs/colorBlind:
    put:
      tags:
      - "member"
      summary: "updateMembersPrefsColorBlindByIdMember()"
      operationId: "updateMembersPrefsColorBlindByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Color Blind\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_colorBlind"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/prefs/locale:
    put:
      tags:
      - "member"
      summary: "updateMembersPrefsLocaleByIdMember()"
      operationId: "updateMembersPrefsLocaleByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Locale\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_locale"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/prefs/minutesBetweenSummaries:
    put:
      tags:
      - "member"
      summary: "updateMembersPrefsMinutesBetweenSummariesByIdMember()"
      operationId: "updateMembersPrefsMinutesBetweenSummariesByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Minutes Between Summaries\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_minutesBetweenSummaries"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/savedSearches:
    get:
      tags:
      - "member"
      summary: "getMembersSavedSearchesByIdMember()"
      operationId: "getMembersSavedSearchesByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "member"
      summary: "addMembersSavedSearchesByIdMember()"
      operationId: "addMembersSavedSearchesByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Saved Searches\" to be added."
        required: true
        schema:
          $ref: "#/definitions/members_savedSearches"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/savedSearches/{idSavedSearch}:
    get:
      tags:
      - "member"
      summary: "getMembersSavedSearchesByIdMemberByIdSavedSearch()"
      operationId: "getMembersSavedSearchesByIdMemberByIdSavedSearch"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idSavedSearch"
        in: "path"
        description: "idSavedSearch"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "member"
      summary: "updateMembersSavedSearchesByIdMemberByIdSavedSearch()"
      operationId: "updateMembersSavedSearchesByIdMemberByIdSavedSearch"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idSavedSearch"
        in: "path"
        description: "idSavedSearch"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Saved Searches\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_savedSearches"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "member"
      summary: "deleteMembersSavedSearchesByIdMemberByIdSavedSearch()"
      operationId: "deleteMembersSavedSearchesByIdMemberByIdSavedSearch"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idSavedSearch"
        in: "path"
        description: "idSavedSearch"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/savedSearches/{idSavedSearch}/name:
    put:
      tags:
      - "member"
      summary: "updateMembersSavedSearchesNameByIdMemberByIdSavedSearch()"
      operationId: "updateMembersSavedSearchesNameByIdMemberByIdSavedSearch"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idSavedSearch"
        in: "path"
        description: "idSavedSearch"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Saved Searches Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_savedSearches_name"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/savedSearches/{idSavedSearch}/pos:
    put:
      tags:
      - "member"
      summary: "updateMembersSavedSearchesPosByIdMemberByIdSavedSearch()"
      operationId: "updateMembersSavedSearchesPosByIdMemberByIdSavedSearch"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idSavedSearch"
        in: "path"
        description: "idSavedSearch"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Saved Searches Pos\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_savedSearches_pos"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/savedSearches/{idSavedSearch}/query:
    put:
      tags:
      - "member"
      summary: "updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch()"
      operationId: "updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "idSavedSearch"
        in: "path"
        description: "idSavedSearch"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Saved Searches Query\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_savedSearches_query"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/tokens:
    get:
      tags:
      - "member"
      summary: "getMembersTokensByIdMember()"
      operationId: "getMembersTokensByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/username:
    put:
      tags:
      - "member"
      summary: "updateMembersUsernameByIdMember()"
      operationId: "updateMembersUsernameByIdMember"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Members Username\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/members_username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /members/{idMember}/{field}:
    get:
      tags:
      - "member"
      summary: "getMembersByIdMemberByField()"
      operationId: "getMembersByIdMemberByField"
      parameters:
      - name: "idMember"
        in: "path"
        description: "idMember or username"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /notifications/all/read:
    post:
      tags:
      - "notification"
      summary: "addNotificationsAllRead()"
      operationId: "addNotificationsAllRead"
      parameters:
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}:
    get:
      tags:
      - "notification"
      summary: "getNotificationsByIdNotification()"
      operationId: "getNotificationsByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator,\
          \ type or unread"
        required: false
        type: "string"
        default: "all"
      - name: "memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "board"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "name"
      - name: "list"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "card"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "card_fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "name"
      - name: "organization"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "organization_fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "displayName"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "notification"
      summary: "updateNotificationsByIdNotification()"
      operationId: "updateNotificationsByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Notifications\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/notifications"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/board:
    get:
      tags:
      - "notification"
      summary: "getNotificationsBoardByIdNotification()"
      operationId: "getNotificationsBoardByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/board/{field}:
    get:
      tags:
      - "notification"
      summary: "getNotificationsBoardByIdNotificationByField()"
      operationId: "getNotificationsBoardByIdNotificationByField"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/card:
    get:
      tags:
      - "notification"
      summary: "getNotificationsCardByIdNotification()"
      operationId: "getNotificationsCardByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/card/{field}:
    get:
      tags:
      - "notification"
      summary: "getNotificationsCardByIdNotificationByField()"
      operationId: "getNotificationsCardByIdNotificationByField"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/display:
    get:
      tags:
      - "notification"
      summary: "getNotificationsDisplayByIdNotification()"
      operationId: "getNotificationsDisplayByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/entities:
    get:
      tags:
      - "notification"
      summary: "getNotificationsEntitiesByIdNotification()"
      operationId: "getNotificationsEntitiesByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/list:
    get:
      tags:
      - "notification"
      summary: "getNotificationsListByIdNotification()"
      operationId: "getNotificationsListByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/list/{field}:
    get:
      tags:
      - "notification"
      summary: "getNotificationsListByIdNotificationByField()"
      operationId: "getNotificationsListByIdNotificationByField"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/member:
    get:
      tags:
      - "notification"
      summary: "getNotificationsMemberByIdNotification()"
      operationId: "getNotificationsMemberByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/member/{field}:
    get:
      tags:
      - "notification"
      summary: "getNotificationsMemberByIdNotificationByField()"
      operationId: "getNotificationsMemberByIdNotificationByField"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/memberCreator:
    get:
      tags:
      - "notification"
      summary: "getNotificationsMemberCreatorByIdNotification()"
      operationId: "getNotificationsMemberCreatorByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/memberCreator/{field}:
    get:
      tags:
      - "notification"
      summary: "getNotificationsMemberCreatorByIdNotificationByField()"
      operationId: "getNotificationsMemberCreatorByIdNotificationByField"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/organization:
    get:
      tags:
      - "notification"
      summary: "getNotificationsOrganizationByIdNotification()"
      operationId: "getNotificationsOrganizationByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/organization/{field}:
    get:
      tags:
      - "notification"
      summary: "getNotificationsOrganizationByIdNotificationByField()"
      operationId: "getNotificationsOrganizationByIdNotificationByField"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/unread:
    put:
      tags:
      - "notification"
      summary: "updateNotificationsUnreadByIdNotification()"
      operationId: "updateNotificationsUnreadByIdNotification"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Notifications Unread\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/notifications_unread"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /notifications/{idNotification}/{field}:
    get:
      tags:
      - "notification"
      summary: "getNotificationsByIdNotificationByField()"
      operationId: "getNotificationsByIdNotificationByField"
      parameters:
      - name: "idNotification"
        in: "path"
        description: "idNotification"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /organizations:
    post:
      tags:
      - "organization"
      summary: "addOrganizations()"
      operationId: "addOrganizations"
      parameters:
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations\" to be added."
        required: true
        schema:
          $ref: "#/definitions/organizations"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsByIdOrg()"
      operationId: "getOrganizationsByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "actions_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "action_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "memberships"
        in: "query"
        description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        required: false
        type: "string"
        default: "none"
      - name: "memberships_member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberships_member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "fullName and username"
      - name: "members"
        in: "query"
        description: "One of: admins, all, none, normal or owners"
        required: false
        type: "string"
        default: "none"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials, username and confirmed"
      - name: "member_activity"
        in: "query"
        description: "true or false ; works for premium organizations only."
        required: false
        type: "string"
      - name: "membersInvited"
        in: "query"
        description: "One of: admins, all, none, normal or owners"
        required: false
        type: "string"
        default: "none"
      - name: "membersInvited_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, initials, fullName and username"
      - name: "boards"
        in: "query"
        description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        required: false
        type: "string"
        default: "none"
      - name: "board_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "board_actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "board_actions_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_actions_display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_actions_format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "board_actions_since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "board_actions_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "board_action_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "board_lists"
        in: "query"
        description: "One of: all, closed, none or open"
        required: false
        type: "string"
        default: "none"
      - name: "paid_account"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "name, displayName, desc, descData, url, website, logoHash, products\
          \ and powerUps"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsByIdOrg()"
      operationId: "updateOrganizationsByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/organizations"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "organization"
      summary: "deleteOrganizationsByIdOrg()"
      operationId: "deleteOrganizationsByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/actions:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsActionsByIdOrg()"
      operationId: "getOrganizationsActionsByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "display"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "A date, or null"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page * limit must be less than 1000"
        required: false
        type: "string"
        default: "0"
      - name: "idModels"
        in: "query"
        description: "Only return actions related to these model ids"
        required: false
        type: "string"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "memberCreator"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "memberCreator_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/boards:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsBoardsByIdOrg()"
      operationId: "getOrganizationsBoardsByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "actions_entities"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "actions_limit"
        in: "query"
        description: "a number from 0 to 1000"
        required: false
        type: "string"
        default: "50"
      - name: "actions_format"
        in: "query"
        description: "One of: count, list or minimal"
        required: false
        type: "string"
        default: "list"
      - name: "actions_since"
        in: "query"
        description: "A date, null or lastView"
        required: false
        type: "string"
      - name: "action_fields"
        in: "query"
        description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        required: false
        type: "string"
        default: "all"
      - name: "memberships"
        in: "query"
        description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        required: false
        type: "string"
        default: "none"
      - name: "organization"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "organization_fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "name and displayName"
      - name: "lists"
        in: "query"
        description: "One of: all, closed, none or open"
        required: false
        type: "string"
        default: "none"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/boards/{filter}:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsBoardsByIdOrgByFilter()"
      operationId: "getOrganizationsBoardsByIdOrgByFilter"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /organizations/{idOrg}/deltas:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsDeltasByIdOrg()"
      operationId: "getOrganizationsDeltasByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "tags"
        in: "query"
        description: "A valid tag for subscribing"
        required: true
        type: "string"
      - name: "ixLastUpdate"
        in: "query"
        description: "a number from -1 to Infinity"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/desc:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsDescByIdOrg()"
      operationId: "updateOrganizationsDescByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations Desc\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/organizations_desc"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/displayName:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsDisplayNameByIdOrg()"
      operationId: "updateOrganizationsDisplayNameByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations Display Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/organizations_displayName"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/logo:
    post:
      tags:
      - "organization"
      summary: "addOrganizationsLogoByIdOrg()"
      operationId: "addOrganizationsLogoByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations Logo\" to be added."
        required: true
        schema:
          $ref: "#/definitions/organizations_logo"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "organization"
      summary: "deleteOrganizationsLogoByIdOrg()"
      operationId: "deleteOrganizationsLogoByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/members:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsMembersByIdOrg()"
      operationId: "getOrganizationsMembersByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "One of: admins, all, none, normal or owners"
        required: false
        type: "string"
        default: "all"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "fullName and username"
      - name: "activity"
        in: "query"
        description: "true or false ; works for premium organizations only."
        required: false
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsMembersByIdOrg()"
      operationId: "updateOrganizationsMembersByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations Members\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/organizations_members"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/members/{filter}:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsMembersByIdOrgByFilter()"
      operationId: "getOrganizationsMembersByIdOrgByFilter"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "filter"
        in: "path"
        description: "filter"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /organizations/{idOrg}/members/{idMember}:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsMembersByIdOrgByIdMember()"
      operationId: "updateOrganizationsMembersByIdOrgByIdMember"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations Members\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/organizations_members"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "organization"
      summary: "deleteOrganizationsMembersByIdOrgByIdMember()"
      operationId: "deleteOrganizationsMembersByIdOrgByIdMember"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/members/{idMember}/all:
    delete:
      tags:
      - "organization"
      summary: "deleteOrganizationsMembersAllByIdOrgByIdMember()"
      operationId: "deleteOrganizationsMembersAllByIdOrgByIdMember"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/members/{idMember}/cards:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsMembersCardsByIdOrgByIdMember()"
      operationId: "getOrganizationsMembersCardsByIdOrgByIdMember"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - name: "actions"
        in: "query"
        description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        required: false
        type: "string"
      - name: "attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "attachment_fields"
        in: "query"
        description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        required: false
        type: "string"
        default: "all"
      - name: "members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials and username"
      - name: "checkItemStates"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "checklists"
        in: "query"
        description: "One of: all or none"
        required: false
        type: "string"
        default: "none"
      - name: "board"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "board_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "name, desc, closed, idOrganization, pinned, url and prefs"
      - name: "list"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "list_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        required: false
        type: "string"
        default: "all"
      - name: "filter"
        in: "query"
        description: "One of: all, closed, none, open or visible"
        required: false
        type: "string"
        default: "visible"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/members/{idMember}/deactivated:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsMembersDeactivatedByIdOrgByIdMember()"
      operationId: "updateOrganizationsMembersDeactivatedByIdOrgByIdMember"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "idMember"
        in: "path"
        description: "idMember"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations Members Deactivated\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/organizations_members_deactivated"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/membersInvited:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsMembersInvitedByIdOrg()"
      operationId: "getOrganizationsMembersInvitedByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/membersInvited/{field}:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsMembersInvitedByIdOrgByField()"
      operationId: "getOrganizationsMembersInvitedByIdOrgByField"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/memberships:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsMembershipsByIdOrg()"
      operationId: "getOrganizationsMembershipsByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "filter"
        in: "query"
        description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        required: false
        type: "string"
        default: "all"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "fullName and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/memberships/{idMembership}:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsMembershipsByIdOrgByIdMembership()"
      operationId: "getOrganizationsMembershipsByIdOrgByIdMembership"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "idMembership"
        in: "path"
        description: "idMembership"
        required: true
        type: "string"
      - name: "member"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "fullName and username"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsMembershipsByIdOrgByIdMembership()"
      operationId: "updateOrganizationsMembershipsByIdOrgByIdMembership"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "idMembership"
        in: "path"
        description: "idMembership"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations Memberships\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/organizations_memberships"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/name:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsNameByIdOrg()"
      operationId: "updateOrganizationsNameByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations Name\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/organizations_name"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/prefs/associatedDomain:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsPrefsAssociatedDomainByIdOrg()"
      operationId: "updateOrganizationsPrefsAssociatedDomainByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Associated Domain\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_associatedDomain"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "organization"
      summary: "deleteOrganizationsPrefsAssociatedDomainByIdOrg()"
      operationId: "deleteOrganizationsPrefsAssociatedDomainByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/prefs/boardVisibilityRestrict/org:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg()"
      operationId: "updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Board Visibility Restrict\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_boardVisibilityRestrict"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/prefs/boardVisibilityRestrict/private:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg()"
      operationId: "updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Board Visibility Restrict\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_boardVisibilityRestrict"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/prefs/boardVisibilityRestrict/public:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg()"
      operationId: "updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Board Visibility Restrict\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_boardVisibilityRestrict"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/prefs/externalMembersDisabled:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsPrefsExternalMembersDisabledByIdOrg()"
      operationId: "updateOrganizationsPrefsExternalMembersDisabledByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs External Members Disabled\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_externalMembersDisabled"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/prefs/googleAppsVersion:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsPrefsGoogleAppsVersionByIdOrg()"
      operationId: "updateOrganizationsPrefsGoogleAppsVersionByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Google Apps Version\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_googleAppsVersion"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/prefs/orgInviteRestrict:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsPrefsOrgInviteRestrictByIdOrg()"
      operationId: "updateOrganizationsPrefsOrgInviteRestrictByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Org Invite Restrict\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_orgInviteRestrict"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "organization"
      summary: "deleteOrganizationsPrefsOrgInviteRestrictByIdOrg()"
      operationId: "deleteOrganizationsPrefsOrgInviteRestrictByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "value"
        in: "query"
        description: "An email address with optional expansion tokens"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/prefs/permissionLevel:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsPrefsPermissionLevelByIdOrg()"
      operationId: "updateOrganizationsPrefsPermissionLevelByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Prefs Permission Level\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/prefs_permissionLevel"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/website:
    put:
      tags:
      - "organization"
      summary: "updateOrganizationsWebsiteByIdOrg()"
      operationId: "updateOrganizationsWebsiteByIdOrg"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Organizations Website\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/organizations_website"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /organizations/{idOrg}/{field}:
    get:
      tags:
      - "organization"
      summary: "getOrganizationsByIdOrgByField()"
      operationId: "getOrganizationsByIdOrgByField"
      parameters:
      - name: "idOrg"
        in: "path"
        description: "idOrg or name"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /search:
    get:
      tags:
      - "search"
      summary: "getSearch()"
      operationId: "getSearch"
      parameters:
      - name: "query"
        in: "query"
        description: "a string with a length from 1 to 16384"
        required: true
        type: "string"
      - name: "idBoards"
        in: "query"
        description: "A comma-separated list of objectIds, 24-character hex strings"
        required: false
        type: "string"
        default: "mine"
      - name: "idOrganizations"
        in: "query"
        description: "A comma-separated list of objectIds, 24-character hex strings"
        required: true
        type: "string"
      - name: "idCards"
        in: "query"
        description: "A comma-separated list of objectIds, 24-character hex strings"
        required: false
        type: "string"
      - name: "modelTypes"
        in: "query"
        description: "all or a comma-separated list of: actions, boards, cards, members\
          \ or organizations"
        required: false
        type: "string"
        default: "all"
      - name: "board_fields"
        in: "query"
        description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        required: false
        type: "string"
        default: "name and idOrganization"
      - name: "boards_limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
        default: "10"
      - name: "card_fields"
        in: "query"
        description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        required: false
        type: "string"
        default: "all"
      - name: "cards_limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
        default: "10"
      - name: "cards_page"
        in: "query"
        description: "a number from 0 to 100"
        required: false
        type: "string"
        default: "0"
      - name: "card_board"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "card_list"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "card_members"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "card_stickers"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "card_attachments"
        in: "query"
        description: "A boolean value or &quot;cover&quot; for only card cover attachments"
        required: false
        type: "string"
      - name: "organization_fields"
        in: "query"
        description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        required: false
        type: "string"
        default: "name and displayName"
      - name: "organizations_limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
        default: "10"
      - name: "member_fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        required: false
        type: "string"
        default: "avatarHash, fullName, initials, username and confirmed"
      - name: "members_limit"
        in: "query"
        description: "a number from 1 to 1000"
        required: false
        type: "string"
        default: "10"
      - name: "partial"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /search/members:
    get:
      tags:
      - "search"
      summary: "getSearchMembers()"
      operationId: "getSearchMembers"
      parameters:
      - name: "query"
        in: "query"
        description: "a string with a length from 1 to 16384"
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        description: "a number from 1 to 20"
        required: false
        type: "string"
        default: "8"
      - name: "idBoard"
        in: "query"
        description: "An id, or null"
        required: false
        type: "string"
      - name: "idOrganization"
        in: "query"
        description: "An id, or null"
        required: false
        type: "string"
      - name: "onlyOrgMembers"
        in: "query"
        description: "A boolean"
        required: false
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /sessions:
    post:
      tags:
      - "session"
      summary: "addSessions()"
      operationId: "addSessions"
      parameters:
      - in: "body"
        name: "body"
        description: "Attributes of \"Sessions\" to be added."
        required: true
        schema:
          $ref: "#/definitions/sessions"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /sessions/socket:
    get:
      tags:
      - "session"
      summary: "getSessionsSocket()"
      description: "This is the route for WebSocket requests.  See the socket API\
        \ reference for a description of WebSocket usage."
      operationId: "getSessionsSocket"
      parameters:
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /sessions/{idSession}:
    put:
      tags:
      - "session"
      summary: "updateSessionsByIdSession()"
      operationId: "updateSessionsByIdSession"
      parameters:
      - name: "idSession"
        in: "path"
        description: "idSession"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Sessions\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/sessions"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /sessions/{idSession}/status:
    put:
      tags:
      - "session"
      summary: "updateSessionsStatusByIdSession()"
      operationId: "updateSessionsStatusByIdSession"
      parameters:
      - name: "idSession"
        in: "path"
        description: "idSession"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Sessions Status\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/sessions_status"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /tokens/{token}:
    get:
      tags:
      - "token"
      summary: "getTokensByToken()"
      operationId: "getTokensByToken"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: dateCreated, dateExpires,\
          \ idMember, identifier or permissions"
        required: false
        type: "string"
        default: "all"
      - name: "webhooks"
        in: "query"
        description: " true or false"
        required: false
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "token"
      summary: "deleteTokensByToken()"
      operationId: "deleteTokensByToken"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /tokens/{token}/member:
    get:
      tags:
      - "token"
      summary: "getTokensMemberByToken()"
      operationId: "getTokensMemberByToken"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        required: false
        type: "string"
        default: "all"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /tokens/{token}/member/{field}:
    get:
      tags:
      - "token"
      summary: "getTokensMemberByTokenByField()"
      operationId: "getTokensMemberByTokenByField"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /tokens/{token}/webhooks:
    get:
      tags:
      - "token"
      summary: "getTokensWebhooksByToken()"
      operationId: "getTokensWebhooksByToken"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    post:
      tags:
      - "token"
      summary: "addTokensWebhooksByToken()"
      operationId: "addTokensWebhooksByToken"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Tokens Webhooks\" to be added."
        required: true
        schema:
          $ref: "#/definitions/tokens_webhooks"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "token"
      summary: "updateTokensWebhooksByToken()"
      operationId: "updateTokensWebhooksByToken"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Tokens Webhooks\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/tokens_webhooks"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /tokens/{token}/webhooks/{idWebhook}:
    get:
      tags:
      - "token"
      summary: "getTokensWebhooksByTokenByIdWebhook()"
      operationId: "getTokensWebhooksByTokenByIdWebhook"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "token"
      summary: "deleteTokensWebhooksByTokenByIdWebhook()"
      operationId: "deleteTokensWebhooksByTokenByIdWebhook"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /tokens/{token}/{field}:
    get:
      tags:
      - "token"
      summary: "getTokensByTokenByField()"
      operationId: "getTokensByTokenByField"
      parameters:
      - name: "token"
        in: "path"
        description: "token"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
  /types/{id}:
    get:
      tags:
      - "type"
      summary: "getTypesById()"
      operationId: "getTypesById"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /webhooks:
    post:
      tags:
      - "webhook"
      summary: "addWebhooks()"
      operationId: "addWebhooks"
      parameters:
      - in: "body"
        name: "body"
        description: "Attributes of \"Webhooks\" to be added."
        required: true
        schema:
          $ref: "#/definitions/webhooks"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /webhooks/:
    put:
      tags:
      - "webhook"
      summary: "updateWebhooks()"
      operationId: "updateWebhooks"
      parameters:
      - in: "body"
        name: "body"
        description: "Attributes of \"Webhooks\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/webhooks"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /webhooks/{idWebhook}:
    get:
      tags:
      - "webhook"
      summary: "getWebhooksByIdWebhook()"
      operationId: "getWebhooksByIdWebhook"
      parameters:
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "webhook"
      summary: "updateWebhooksByIdWebhook()"
      operationId: "updateWebhooksByIdWebhook"
      parameters:
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Webhooks\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/webhooks"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
    delete:
      tags:
      - "webhook"
      summary: "deleteWebhooksByIdWebhook()"
      operationId: "deleteWebhooksByIdWebhook"
      parameters:
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /webhooks/{idWebhook}/active:
    put:
      tags:
      - "webhook"
      summary: "updateWebhooksActiveByIdWebhook()"
      operationId: "updateWebhooksActiveByIdWebhook"
      parameters:
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Webhooks Active\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/webhooks_active"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /webhooks/{idWebhook}/callbackURL:
    put:
      tags:
      - "webhook"
      summary: "updateWebhooksCallbackURLByIdWebhook()"
      operationId: "updateWebhooksCallbackURLByIdWebhook"
      parameters:
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Webhooks Callback Url\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/webhooks_callbackURL"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /webhooks/{idWebhook}/description:
    put:
      tags:
      - "webhook"
      summary: "updateWebhooksDescriptionByIdWebhook()"
      operationId: "updateWebhooksDescriptionByIdWebhook"
      parameters:
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Webhooks Description\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/webhooks_description"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /webhooks/{idWebhook}/idModel:
    put:
      tags:
      - "webhook"
      summary: "updateWebhooksIdModelByIdWebhook()"
      operationId: "updateWebhooksIdModelByIdWebhook"
      parameters:
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Attributes of \"Webhooks Id Model\" to be updated."
        required: true
        schema:
          $ref: "#/definitions/webhooks_idModel"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
      security:
      - api_key: []
      - api_token: []
  /webhooks/{idWebhook}/{field}:
    get:
      tags:
      - "webhook"
      summary: "getWebhooksByIdWebhookByField()"
      operationId: "getWebhooksByIdWebhookByField"
      parameters:
      - name: "idWebhook"
        in: "path"
        description: "idWebhook"
        required: true
        type: "string"
      - name: "field"
        in: "path"
        description: "field"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "<a href=\"https://trello.com/1/appKey/generate\"  target=\"\
          _blank\">Generate your application key</a>"
        required: true
        type: "string"
      - name: "token"
        in: "query"
        description: "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"\
          \  target=\"_blank\">Getting a token from a user</a>"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
        400:
          description: "Server rejection"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "key"
    in: "query"
  api_token:
    type: "apiKey"
    name: "token"
    in: "query"
definitions:
  actions:
    type: "object"
    properties:
      text:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "action"
  actions_comments:
    type: "object"
    properties:
      text:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "card"
  actions_text:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "action"
  boards:
    type: "object"
    properties:
      closed:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      desc:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      idBoardSource:
        type: "string"
        description: "The id of the board to copy into the new board"
        x-dataType: "Text"
      idOrganization:
        type: "string"
        description: "The id or name of the organization to add the board to."
        x-dataType: "Text"
      keepFromSource:
        type: "string"
        description: "Components of the source board to copy."
        x-dataType: "Text"
      labelNames/blue:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      labelNames/green:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      labelNames/orange:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      labelNames/purple:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      labelNames/red:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      labelNames/yellow:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
      powerUps:
        type: "string"
        description: "all or a comma-separated list of: calendar, cardAging, recap\
          \ or voting"
        x-dataType: "Text"
      prefs/background:
        type: "string"
        description: "A standard background name, or the id of a custom background"
        x-dataType: "Text"
      prefs/calendarFeedEnabled:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      prefs/cardAging:
        type: "string"
        description: "One of: pirate or regular"
        x-dataType: "Text"
      prefs/cardCovers:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      prefs/comments:
        type: "string"
        description: "One of: disabled, members, observers, org or public"
        x-dataType: "Text"
      prefs/invitations:
        type: "string"
        description: "One of: admins or members"
        x-dataType: "Text"
      prefs/permissionLevel:
        type: "string"
        description: "One of: org, private or public"
        x-dataType: "Text"
      prefs/selfJoin:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      prefs/voting:
        type: "string"
        description: "One of: disabled, members, observers, org or public"
        x-dataType: "Text"
      prefs_background:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      prefs_cardAging:
        type: "string"
        description: "One of: pirate or regular"
        x-dataType: "Text"
      prefs_cardCovers:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      prefs_comments:
        type: "string"
        description: "One of: disabled, members, observers, org or public"
        x-dataType: "Text"
      prefs_invitations:
        type: "string"
        description: "One of: admins or members"
        x-dataType: "Text"
      prefs_permissionLevel:
        type: "string"
        description: "One of: org, private or public"
        x-dataType: "Text"
      prefs_selfJoin:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      prefs_voting:
        type: "string"
        description: "One of: disabled, members, observers, org or public"
        x-dataType: "Text"
      subscribed:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_checklists:
    type: "object"
    properties:
      name:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_closed:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_desc:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_idOrganization:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_labels:
    type: "object"
    properties:
      color:
        type: "string"
        description: "A valid label color or null"
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_lists:
    type: "object"
    properties:
      name:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
      pos:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "board"
  boards_members:
    type: "object"
    properties:
      email:
        type: "string"
        description: "An email address"
        x-dataType: "Text"
      fullName:
        type: "string"
        description: "A string with a length of at least 1.  Cannot begin or end with\
          \ a space."
        x-dataType: "Text"
      type:
        type: "string"
        description: "One of: admin, normal or observer"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_memberships:
    type: "object"
    properties:
      member_fields:
        type: "string"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        x-dataType: "Text"
      type:
        type: "string"
        description: "One of: admin, normal or observer"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_name:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_powerUps:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: calendar, cardAging, recap or voting"
        x-dataType: "Text"
    xml:
      name: "board"
  boards_subscribed:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  cards:
    type: "object"
    properties:
      closed:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      desc:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      due:
        type: "string"
        description: "A date, or null"
        x-dataType: "Text"
      fileSource:
        type: "string"
        description: "A file"
        x-dataType: "Text"
      idAttachmentCover:
        type: "string"
        description: "Id of the image attachment of this card to use as its cover,\
          \ or null for no cover"
        x-dataType: "Text"
      idBoard:
        type: "string"
        description: "id of the board the card should be moved to"
        x-dataType: "Text"
      idCardSource:
        type: "string"
        description: "The id of the card to copy into a new card."
        x-dataType: "Text"
      idLabels:
        type: "string"
        description: "A comma-separated list of objectIds, 24-character hex strings"
        x-dataType: "Text"
      idList:
        type: "string"
        description: "id of the list that the card should be added to"
        x-dataType: "Text"
      idMembers:
        type: "string"
        description: "A comma-separated list of objectIds, 24-character hex strings"
        x-dataType: "Text"
      keepFromSource:
        type: "string"
        description: "Properties of the card to copy over from the source."
        x-dataType: "Text"
      labels:
        type: "string"
        description: "all or a comma-separated list of: blue, green, orange, purple,\
          \ red or yellow"
        x-dataType: "Text"
      name:
        type: "string"
        description: "The name of the new card.  It isn&#39;t required if the name\
          \ is being copied from provided by a URL, file or card that is being copied."
        x-dataType: "Text"
      pos:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
      subscribed:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      urlSource:
        type: "string"
        description: "A URL starting with http:// or https:// or null"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_actions_comments:
    type: "object"
    properties:
      text:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_attachments:
    type: "object"
    properties:
      file:
        type: "string"
        description: "A file"
        x-dataType: "Text"
      mimeType:
        type: "string"
        description: "a string with a length from 0 to 256"
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 0 to 256"
        x-dataType: "Text"
      url:
        type: "string"
        description: "A URL starting with http:// or https:// or null"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_checklist_checkItem:
    type: "object"
    properties:
      name:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
      pos:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "card"
  cards_checklist_checkItem_name:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_checklist_checkItem_pos:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "card"
  cards_checklist_checkItem_state:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: complete, false, incomplete or true"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_checklist_idChecklistCurrent_checkItem:
    type: "object"
    properties:
      idChecklist:
        type: "string"
        description: "An id, or null"
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
      pos:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
      state:
        type: "string"
        description: "One of: complete, false, incomplete or true"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_checklists:
    type: "object"
    properties:
      idChecklistSource:
        type: "string"
        description: "The id of the source checklist to copy into a new checklist."
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      value:
        type: "string"
        description: "The id of the checklist to add to the card, or null to create\
          \ a new one."
        x-dataType: "Text"
    xml:
      name: "card"
  cards_closed:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_desc:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_due:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A date, or null"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_idAttachmentCover:
    type: "object"
    properties:
      value:
        type: "string"
        description: "Id of the image attachment of this card to use as its cover,\
          \ or null for no cover"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_idBoard:
    type: "object"
    properties:
      idList:
        type: "string"
        description: "id of the list that the card should be moved to on the new board"
        x-dataType: "Text"
      value:
        type: "string"
        description: "id of the board the card should be moved to"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_idLabels:
    type: "object"
    properties:
      value:
        type: "string"
        description: "The id of the label to add"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_idList:
    type: "object"
    properties:
      value:
        type: "string"
        description: "id of the list the card should be moved to"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_idMembers:
    type: "object"
    properties:
      value:
        type: "string"
        description: "The id of the member to add to the card"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_labels:
    type: "object"
    properties:
      color:
        type: "string"
        description: "A valid label color or null"
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      value:
        type: "string"
        description: "all or a comma-separated list of: blue, green, orange, purple,\
          \ red or yellow"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_membersVoted:
    type: "object"
    properties:
      value:
        type: "string"
        description: "The id of the member to vote &#39;yes&#39; on the card"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_name:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_pos:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "card"
  cards_stickers:
    type: "object"
    properties:
      image:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      left:
        type: "string"
        description: "undefined"
        x-dataType: "Text"
      rotate:
        type: "string"
        description: "undefined"
        x-dataType: "Text"
      top:
        type: "string"
        description: "undefined"
        x-dataType: "Text"
      zIndex:
        type: "string"
        description: "Valid Z values for stickers, must be an integer"
        x-dataType: "Text"
    xml:
      name: "card"
  cards_subscribed:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "card"
  checklists:
    type: "object"
    properties:
      idBoard:
        type: "string"
        description: "id of the board that the checklist should be added to"
        x-dataType: "Text"
      idCard:
        type: "string"
        description: "id of the card that the checklist should be added to"
        x-dataType: "Text"
      idChecklistSource:
        type: "string"
        description: "The id of the source checklist to copy into a new checklist."
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      pos:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "checklist"
  checklists_checkItems:
    type: "object"
    properties:
      checked:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
      pos:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "checklist"
  checklists_idCard:
    type: "object"
    properties:
      value:
        type: "string"
        description: "The id of the card that the checklist is on"
        x-dataType: "Text"
    xml:
      name: "checklist"
  checklists_name:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "checklist"
  checklists_pos:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "checklist"
  labelNames_blue:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  labelNames_green:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  labelNames_orange:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  labelNames_purple:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  labelNames_red:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  labelNames_yellow:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "board"
  labels:
    type: "object"
    properties:
      color:
        type: "string"
        description: "A valid label color or null"
        x-dataType: "Text"
      idBoard:
        type: "string"
        description: "An id"
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "label"
  labels_color:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A valid label color or null"
        x-dataType: "Text"
    xml:
      name: "label"
  labels_name:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "label"
  lists:
    type: "object"
    properties:
      closed:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      idBoard:
        type: "string"
        description: "id of the board that the list should be added to"
        x-dataType: "Text"
      idListSource:
        type: "string"
        description: "The id of the list to copy into a new list."
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
      pos:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
      subscribed:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "list"
  lists_cards:
    type: "object"
    properties:
      desc:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      due:
        type: "string"
        description: "A date, or null"
        x-dataType: "Text"
      idMembers:
        type: "string"
        description: "A comma-separated list of objectIds, 24-character hex strings"
        x-dataType: "Text"
      labels:
        type: "string"
        description: "all or a comma-separated list of: blue, green, orange, purple,\
          \ red or yellow"
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "list"
  lists_closed:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "list"
  lists_idBoard:
    type: "object"
    properties:
      pos:
        type: "string"
        description: "position of the list on the new board"
        x-dataType: "Text"
      value:
        type: "string"
        description: "id of the board the list should be moved to"
        x-dataType: "Text"
    xml:
      name: "list"
  lists_moveAllCards:
    type: "object"
    properties:
      idBoard:
        type: "string"
        description: "id of the board that the cards should be moved to"
        x-dataType: "Text"
    xml:
      name: "list"
  lists_name:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "list"
  lists_pos:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "list"
  lists_subscribed:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "list"
  members:
    type: "object"
    properties:
      avatarSource:
        type: "string"
        description: "One of: gravatar, none or upload"
        x-dataType: "Text"
      bio:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      fullName:
        type: "string"
        description: "A string with a length of at least 1.  Cannot begin or end with\
          \ a space."
        x-dataType: "Text"
      initials:
        type: "string"
        description: "A string with a length from 1 to 4.  Cannot begin or end with\
          \ a space"
        x-dataType: "Text"
      prefs/colorBlind:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      prefs/locale:
        type: "string"
        description: "a string with a length from 0 to 255"
        x-dataType: "Text"
      prefs/minutesBetweenSummaries:
        type: "string"
        description: "-1 (disabled), 1 or 60"
        x-dataType: "Text"
      username:
        type: "string"
        description: "A string with a length of at least 3.  Only lowercase letters,\
          \ underscores, and numbers are allowed.  Must be unique."
        x-dataType: "Text"
    xml:
      name: "member"
  members_avatar:
    type: "object"
    properties:
      file:
        type: "string"
        description: "A file"
        x-dataType: "Text"
    xml:
      name: "member"
  members_avatarSource:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: gravatar, none or upload"
        x-dataType: "Text"
    xml:
      name: "member"
  members_bio:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "member"
  members_boardBackgrounds:
    type: "object"
    properties:
      brightness:
        type: "string"
        description: "One of: dark, light or unknown"
        x-dataType: "Text"
      file:
        type: "string"
        description: "A file"
        x-dataType: "Text"
      tile:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "member"
  members_boardStars:
    type: "object"
    properties:
      idBoard:
        type: "string"
        description: "The id of the board to star"
        x-dataType: "Text"
      pos:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "member"
  members_boardStars_idBoard:
    type: "object"
    properties:
      value:
        type: "string"
        description: "An id"
        x-dataType: "Text"
    xml:
      name: "member"
  members_boardStars_pos:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "member"
  members_customBoardBackgrounds:
    type: "object"
    properties:
      brightness:
        type: "string"
        description: "One of: dark, light or unknown"
        x-dataType: "Text"
      file:
        type: "string"
        description: "A file"
        x-dataType: "Text"
      tile:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "member"
  members_customEmoji:
    type: "object"
    properties:
      file:
        type: "string"
        description: "A file"
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 2 to 64"
        x-dataType: "Text"
    xml:
      name: "member"
  members_customStickers:
    type: "object"
    properties:
      file:
        type: "string"
        description: "A file"
        x-dataType: "Text"
    xml:
      name: "member"
  members_fullName:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A string with a length of at least 1.  Cannot begin or end with\
          \ a space."
        x-dataType: "Text"
    xml:
      name: "member"
  members_initials:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A string with a length from 1 to 4.  Cannot begin or end with\
          \ a space"
        x-dataType: "Text"
    xml:
      name: "member"
  members_oneTimeMessagesDismissed:
    type: "object"
    properties:
      value:
        type: "string"
        description: "Type of message dismissed"
        x-dataType: "Text"
    xml:
      name: "member"
  members_savedSearches:
    type: "object"
    properties:
      name:
        type: "string"
        description: "A non-empty string with at least one non-space character"
        x-dataType: "Text"
      pos:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
      query:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "member"
  members_savedSearches_name:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A non-empty string with at least one non-space character"
        x-dataType: "Text"
    xml:
      name: "member"
  members_savedSearches_pos:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A position. top , bottom , or a positive number."
        x-dataType: "Text"
    xml:
      name: "member"
  members_savedSearches_query:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 1 to 16384"
        x-dataType: "Text"
    xml:
      name: "member"
  members_username:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A string with a length of at least 3.  Only lowercase letters,\
          \ underscores, and numbers are allowed.  Must be unique."
        x-dataType: "Text"
    xml:
      name: "member"
  myPrefs_emailPosition:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: bottom or top"
        x-dataType: "Text"
    xml:
      name: "board"
  myPrefs_idEmailList:
    type: "object"
    properties:
      value:
        type: "string"
        description: "An id"
        x-dataType: "Text"
    xml:
      name: "board"
  myPrefs_showListGuide:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  myPrefs_showSidebar:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  myPrefs_showSidebarActivity:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  myPrefs_showSidebarBoardActions:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  myPrefs_showSidebarMembers:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  notifications:
    type: "object"
    properties:
      unread:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "notification"
  notifications_unread:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "notification"
  organizations:
    type: "object"
    properties:
      desc:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      displayName:
        type: "string"
        description: "A string with a length of at least 1.  Cannot begin or end with\
          \ a space."
        x-dataType: "Text"
      name:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      prefs/associatedDomain:
        type: "string"
        description: "The google apps domain to link this org to."
        x-dataType: "Text"
      prefs/boardVisibilityRestrict/org:
        type: "string"
        description: "One of: admin, none or org"
        x-dataType: "Text"
      prefs/boardVisibilityRestrict/private:
        type: "string"
        description: "One of: admin, none or org"
        x-dataType: "Text"
      prefs/boardVisibilityRestrict/public:
        type: "string"
        description: "One of: admin, none or org"
        x-dataType: "Text"
      prefs/externalMembersDisabled:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      prefs/googleAppsVersion:
        type: "string"
        description: "a number from 1 to 2"
        x-dataType: "Text"
      prefs/orgInviteRestrict:
        type: "string"
        description: "An email address with optional expansion tokens"
        x-dataType: "Text"
      prefs/permissionLevel:
        type: "string"
        description: "One of: private or public"
        x-dataType: "Text"
      website:
        type: "string"
        description: "A URL starting with http:// or https:// or null"
        x-dataType: "Text"
    xml:
      name: "organization"
  organizations_desc:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "organization"
  organizations_displayName:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A string with a length of at least 1.  Cannot begin or end with\
          \ a space."
        x-dataType: "Text"
    xml:
      name: "organization"
  organizations_logo:
    type: "object"
    properties:
      file:
        type: "string"
        description: "A file"
        x-dataType: "Text"
    xml:
      name: "organization"
  organizations_members:
    type: "object"
    properties:
      email:
        type: "string"
        description: "An email address"
        x-dataType: "Text"
      fullName:
        type: "string"
        description: "A string with a length of at least 1.  Cannot begin or end with\
          \ a space."
        x-dataType: "Text"
      type:
        type: "string"
        description: "One of: admin, normal or observer"
        x-dataType: "Text"
    xml:
      name: "organization"
  organizations_members_deactivated:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "organization"
  organizations_memberships:
    type: "object"
    properties:
      member_fields:
        type: "string"
        description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        x-dataType: "Text"
      type:
        type: "string"
        description: "One of: admin, normal or observer"
        x-dataType: "Text"
    xml:
      name: "organization"
  organizations_name:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A string with a length of at least 3.  Only lowercase letters,\
          \ underscores, and numbers are allowed.  Must be unique."
        x-dataType: "Text"
    xml:
      name: "organization"
  organizations_website:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A URL starting with http:// or https:// or null"
        x-dataType: "Text"
    xml:
      name: "organization"
  prefs_associatedDomain:
    type: "object"
    properties:
      value:
        type: "string"
        description: "The google apps domain to link this org to."
        x-dataType: "Text"
    xml:
      name: "organization"
  prefs_background:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A standard background name, or the id of a custom background"
        x-dataType: "Text"
    xml:
      name: "board"
  prefs_boardVisibilityRestrict:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: admin, none or org"
        x-dataType: "Text"
    xml:
      name: "organization"
  prefs_calendarFeedEnabled:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  prefs_cardAging:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: pirate or regular"
        x-dataType: "Text"
    xml:
      name: "board"
  prefs_cardCovers:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  prefs_colorBlind:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "member"
  prefs_comments:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: disabled, members, observers, org or public"
        x-dataType: "Text"
    xml:
      name: "board"
  prefs_externalMembersDisabled:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "organization"
  prefs_googleAppsVersion:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a number from 1 to 2"
        x-dataType: "Text"
    xml:
      name: "organization"
  prefs_invitations:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: admins or members"
        x-dataType: "Text"
    xml:
      name: "board"
  prefs_locale:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 255"
        x-dataType: "Text"
    xml:
      name: "member"
  prefs_minutesBetweenSummaries:
    type: "object"
    properties:
      value:
        type: "string"
        description: "-1 (disabled), 1 or 60"
        x-dataType: "Text"
    xml:
      name: "member"
  prefs_orgInviteRestrict:
    type: "object"
    properties:
      value:
        type: "string"
        description: "An email address with optional expansion tokens"
        x-dataType: "Text"
    xml:
      name: "organization"
  prefs_permissionLevel:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: private or public"
        x-dataType: "Text"
    xml:
      name: "board"
  prefs_selfJoin:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "board"
  prefs_voting:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: disabled, members, observers, org or public"
        x-dataType: "Text"
    xml:
      name: "board"
  sessions:
    type: "object"
    properties:
      idBoard:
        type: "string"
        description: "The id of the board you&#39;re viewing.  Boards with no viewers\
          \ will not get updates about members&#39; statuses."
        x-dataType: "Text"
      status:
        type: "string"
        description: "One of: active, disconnected or idle"
        x-dataType: "Text"
    xml:
      name: "session"
  sessions_status:
    type: "object"
    properties:
      value:
        type: "string"
        description: "One of: active, disconnected or idle"
        x-dataType: "Text"
    xml:
      name: "session"
  tokens_webhooks:
    type: "object"
    properties:
      callbackURL:
        type: "string"
        description: "A valid URL that is reachable with a HEAD request"
        x-dataType: "Text"
      description:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      idModel:
        type: "string"
        description: "id of the model to be monitored"
        x-dataType: "Text"
    xml:
      name: "token"
  webhooks:
    type: "object"
    properties:
      active:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
      callbackURL:
        type: "string"
        description: "A valid URL that is reachable with a HEAD request"
        x-dataType: "Text"
      description:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
      idModel:
        type: "string"
        description: "id of the model that should be hooked"
        x-dataType: "Text"
    xml:
      name: "webhook"
  webhooks_active:
    type: "object"
    properties:
      value:
        type: "string"
        description: " true or false"
        x-dataType: "Text"
    xml:
      name: "webhook"
  webhooks_callbackURL:
    type: "object"
    properties:
      value:
        type: "string"
        description: "A valid URL that is reachable with a HEAD request"
        x-dataType: "Text"
    xml:
      name: "webhook"
  webhooks_description:
    type: "object"
    properties:
      value:
        type: "string"
        description: "a string with a length from 0 to 16384"
        x-dataType: "Text"
    xml:
      name: "webhook"
  webhooks_idModel:
    type: "object"
    properties:
      value:
        type: "string"
        description: "id of the model to be monitored"
        x-dataType: "Text"
    xml:
      name: "webhook"
externalDocs:
  url: "https://developers.trello.com"
